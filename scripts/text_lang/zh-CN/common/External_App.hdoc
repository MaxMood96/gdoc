[HELPDOC]


########## New External App ##########


[ITEM]
ID: extAppType
NAME: Type
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies the type of external application. Choose from
<ul>
  <li>{val}FastCGI{/}: a FastCGI application with {val}Responder{/} role.</li>
  <li>{val}Servlet Engine{/}: a Servlet engine with AJPv13 connector, such as tomcat.</li>
  <li>{val}HTTP Proxy{/}: a web server or application server that supports the HTTP protocol.</li>
  <li>{val}HTTPS Proxy{/}: a web server or application server that supports the HTTPS protocol.</li>
  <li>{val}LSAPI App{/}: an application that communicates with the web server using the LSAPI protocol.</li>
</ul>
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: extAppType
NAME: 类型
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定外部应用程序的类型。 应用程序类型根据它们提供的服务或与服务器通信所使用的协议而有所不同。 从中选择
<ul>
  <li>{val}FastCGI{/}: a FastCGI application with a {val}Responder{/} role.</li>
  <li>{val}FastCGI Authorizer{/}: a FastCGI application with an {val}Authorizer{/} role</li>
  <li>{val}Servlet Engine{/}: a servlet engine with an AJPv13 connector, such as Tomcat.</li>
  <li>{val}Web Server{/}: a web server or application server that supports HTTP protocol.</li>
  <li>{val}LiteSpeed SAPI App{/}: an application that communicates with the web server using LSAPI protocol.</li>
  <li>{val}Load Balancer{/}: a virtual application that can balance load among worker applications.</li>
  <li>{val}Piped Logger{/}: an application that can process access log entries received on its STDIN stream.</li>
</ul>
END_DESCR

EDITTIP: You can set up external Fast CGI application and AJPv13 (Apache JServ Protocol v1.3) compatible servlet engine.
END_EDITTIP

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: Most applications will use either LSAPI or FastCGI protocol. LSAPI supports PHP, Ruby, and Python. Perl can be
used with FastCGI. (PHP, Ruby, and Python can also be set up to run using FastCGI, but they run faster using LSAPI.)
Java uses servlet engines.
END_TIPS

[END_ITEM]



########## App Definition ##########


[ITEM]
ID: extAppName
NAME: 名称
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 此外部应用程序的唯一名称。 在配置的其他部分中使用该名称时，将使用该名称进行引用。
END_DESCR

EDITTIP: Give a name that easy to remember, other places will refer to this app by its name.
END_EDITTIP

SYNTAX: text
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: extWorkers
NAME: Workers
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: List of worker groups previously defined in the external load balancer.
END_DESCR

EDITTIP: Load balancing workers must be previously defined.
END_EDITTIP

EDITTIP: Available ExtApp Types are fcgi(Fast CGI App), lsapi(LSAPI App), servlet(Servlet/JSP Engine), proxy(Web Server).
END_EDITTIP

EDITTIP: Different types of external applications can be mixed in one load balancing cluster.
END_EDITTIP

SYNTAX: A comma-separated list in the form ExternalAppType::ExternalAppName
END_SYNTAX

EXAMPLE: fcgi::localPHP, proxy::backend1
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: workerName
NAME: Name
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: A unique name for a group of workers.
END_DESCR

SYNTAX: text
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: workerGroupEnabled
NAME: Enabled
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies whether to enable this worker group.
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sourceIP
NAME: 源IP
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定用于连接到后端工作器的源IP。 可以被工具人(worker)的配置覆盖。
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: extAppAddress
NAME: 地址
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: 外部应用程序使用的唯一套接字地址。 支持IPv4/IPv6套接字和Unix域套接字（UDS）。
IPv4/IPv6套接字可用于网络通信。
只有当外部应用程序与服务器在同一台机器上时，才能使用UDS。
END_DESCR

EDITTIP: 地址可以是IPv4套接字地址 "IP:PORT", 像192.168.1.3:7777 和localhost:7777 或者 Unix域套接字
地址 "UDS://path" 例如 UDS://tmp/lshttpd/myfcgi.sock.
END_EDITTIP

EDITTIP: UDS是在chroot环境下进行的。
END_EDITTIP

EDITTIP:对于本地应用程序，由于安全性和更好的性能，Unix域套接字是首选。
如果你必须使用IPv4套接字，将IP部分设置为localhost或127.0.0.1，
这样其他机器就无法访问应用程序。
END_EDITTIP

SYNTAX: IPv4 或 IPV6 address:port 或者 UDS://path
END_SYNTAX

EXAMPLE: 127.0.0.1:5434

UDS://tmp/lshttpd/php.sock.
END_EXAMPLE

TIPS: [安全建议] 如果外部应用程序在同一台机器上运行，则首选UDS。如果必须使用IPv4|IPV6,
将IP地址设置为{val}localhost{/}或{val}127.0.0.1{/}，这样外部应用就无法从其他机器上访问。
[性能建议] Unix域套接字一般比IPv4套接字拥有更高的性能。
END_TIPS

[END_ITEM]



[ITEM]
ID: expWSAddress
NAME: 地址
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: 外部网络服务器使用的HTTP,HTTPS或Unix域套接字(UDS)地址。
END_DESCR

SYNTAX: IPv4 或 IPV6 地址(:端口),UDS://path或unix:path 如果外部Web服务器使用HTTPS，则在前面加上 "https://"。 
如果外部Web服务器使用标准端口80或443，则端口是可选的。
END_SYNTAX

EXAMPLE: 192.168.0.10

127.0.0.1:5434

https://10.0.8.9

https://127.0.0.1:5438

UDS://tmp/lshttpd/php.sock

unix:/tmp/lshttpd/php.sock
END_EXAMPLE

TIPS: [安全建议] 如果代理到同一台机器上运行的另一台Web服务器，请将IP地址设置为{val}localhost{/}或{val}127.0.0.1{/}，这样从其他机器上就无法访问外部应用程序。

END_TIPS

[END_ITEM]



[ITEM]
ID: extSrcIP
NAME: Type
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Select from available IPs.
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: maxConns
NAME: 最大连接数
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定服务器与外部应用之间可建立的最大并发连接数。该设置控制外部应用程序可同时处理多少个请求。 然而，真正的限制还取决于外部应用本身。如果外部的速度不够快，或者无法处理大量的并发请求，那么将这个值设置得更高也无济于事。
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: [性能建议] 设置一个高值并不能直接变成高性能。设置为一个不会使外部应用程序过载的值，将提供最佳的性能/吞吐量。
END_TIPS

[END_ITEM]



[ITEM]
ID: env
NAME: 环境
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 为外部应用程序指定额外的环境变量。
END_DESCR

SYNTAX: Key=value. Multiple variables can be separated by "ENTER"
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: initTimeout
NAME: Initial Request Timeout (secs)
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies the maximum time in seconds the server will wait for the external application to respond to the first
request over a new established connection. If the server does not receive any data from the external application within
this timeout limit, it will mark this connection as bad. This helps to identify communication problems with external
applications as quickly as possible. If some requests take longer to process, increase this limit to avoid 503 error
messages.


Default value: {val}600{/}
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: initTimeout
NAME: 初次请求超时时间 (secs)
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定服务器等待外部应用响应新建立的连接的第一个请求的最大时间 
如果服务器在这个限制时间内没有收到外部应用的任何数据，它将把这个连接标记为坏(Bad)。这有助于识别与外部应用程序的通信问题。
这有助于尽快发现与外部应用的通信问题。如果某些请求的处理时间较长，则增加这个限制以避免503错误信息。
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: retryTimeout
NAME: Retry Timeout (secs)
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies the period of time that the server waits before retrying an external application that had a prior
communication problem.


Default value: {val}10{/}
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: retryTimeout
NAME: 重试超时时间 (secs)
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定服务器在重试之前，等待出现通信问题的外部应用程序的时间。
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: persistConn
NAME: Persistent Connection
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies whether to keep the connection open after a request has been processed. Persistent connections can
increase performance, but some FastCGI external applications do not support persistent connections fully. The default is
"On".


Default value: {val}Yes{/}
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: persistConn
NAME: 持久连接
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定在处理完请求后是否要保持连接 持久连接可以提高性能，
但某些FastCGI外部应用程序不完全支持持久连接。默认为 "On"。
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: pcKeepAliveTimeout
NAME: Connection Keepalive Timeout
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies the maximum time in seconds to keep an idle persistent connection open.


When set to {val}-1{/}, the connection will never timeout. When set to 0 or greater, the connection will be closed after
this time in seconds has passed.


Default value: {val}30{/}
END_DESCR

SYNTAX: int
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: pcKeepAliveTimeout
NAME: 持久连接超时时间
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定保持持久连接的最大时间，以秒为单位。


如果设置成"-1",连接将不会超时. 当设置成0或者更大, 连接将在这些秒数后被关闭。
END_DESCR

SYNTAX: int
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: respBuffer
NAME: Response Buffering
NS: L
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies whether to buffer responses received from external applications. If a "nph-" (Non-Parsed-Header) script
is detected, buffering is turned off for responses with full HTTP headers.


Default value: {val}Yes{/}
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: respBuffer
NAME: 响应缓冲
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定是否要从外部应用程序缓冲收到的响应。
如果nph-(Non-Parsed-Header)脚本被检测到，则关闭具有完整HTTP头的缓冲响应。
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: autoStart
NAME: Start By Server
NS: E
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Specifies whether you want the web server to start the application automatically. Only FastCGI and LSAPI
applications running on the same machine can be started automatically. The IP in the {ITEM=extAppAddress} must be a
local IP. Starting through the LiteSpeed CGI Daemon instead of a main server process will help reduce system overhead.
CGI Daemon Async mode (non-blocking event-driven method) is recommended for servers with high I/O wait.


Default value: Yes (Through CGI Daemon Async)
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: autoStart
NAME: 开机自启
NS: O
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定是否要Web服务器自动启动应用程序。只有运行在同一台机器上的FastCGI和LSAPI应用程序才能自动启动。
{ITEM=extAppAddress}中的IP必须是本地IP. 通过LiteSpeed CGI守护进程而不是主服务器进程启动,有助于减少系统开销。


Default value: Yes (Through CGI Daemon)
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: extAppPath
NAME: 命令
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO: {ITEM=autoStart}

DESCR: 指定包含外部应用程序的执行参数在内的完整命令行。 
需要{ITEM=autoStart}的值为enable.如果参数中包含空格或制表符,应使用双引号或单引号将其引起。
END_DESCR

SYNTAX: Full path to the executable with optional parameters.
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: backlog
NAME: Back Log
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: Specifies the backlog of the listening socket.  Required if {ITEM=autoStart} is enabled.
END_DESCR

EDITTIP: Local applications can be started by the web server. In this case, you need to specify the path, backlog and
number of instances.
END_EDITTIP

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: instances
NAME: 实例数
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: 指定服务器创建的外部应用的最大实例数。这个选项需要{ITEM=autoStart}的值为enable.
大多数FastCGI/LSAPI应用程序每个进程实例只能处理一个请求，对于这种类型的应用，实例数应与{ITEM=maxConns}的值相匹配。 
而有些FastCGI/LSAPI应用程序可以生成多个子进程以同时处理多个请求. 对于这种类型的应用，应将实例设置为 "1"，并使用环境变量来控制应用可以生成多少个子进程。
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: extUser
NAME: Run As User
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO: extGroup

DESCR: The external application will run as this specified user name. If not set, Virtual Host level settings will be inherited.


Default value: Not Set
END_DESCR

SYNTAX: Valid username.
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS
[END_ITEM]



[ITEM]
ID: extGroup
NAME: 以特定组运行
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO: extUser

DESCR: 外部应用程序将作为此指定的组名运行。如果未设置，将继承虚拟主机级别的设置。


Default value: Not Set
END_DESCR

SYNTAX: Valid group name.
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS
[END_ITEM]



[ITEM]
ID: extUmask
NAME: umask
REQUIRED:
APPLY: 3
SINCE: 5.0
SEE_ALSO: CGI {ITEM=ServSecurity_Help#umask}

DESCR: Sets default umask for this external application's processes. See {cmd} man 2 umask {/} for details. The default
value taken from the server-level {ITEM=ServSecurity_Help#umask} setting.
END_DESCR

SYNTAX: value valid range [000]-[777].
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS
[END_ITEM]



[ITEM]
ID: runOnStartUp
NAME: 开机自启
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定是否在服务器启动时启动外部应用程序. 
只适用于可以管理自己子进程的外部应用程序，并且{ITEM=instances}值设置为"1"。


如果启用，将在服务器启动时而不是运行时创建外部进程.


When selecting "Yes (Detached mode)", all detached process can be restarted at the Server level or Virtual Host level by
touching the '.lsphp_restart.txt' file under the $SERVER_ROOT/admin/tmp/ or $VH_ROOT/ directory respectively.


Default value: Yes (Detached mode)
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:[性能建议] 如果配置的外部进程有很大的启动开销，比如Rails，那么应该启用这个选项来减少首页响应时间。
END_TIPS
[END_ITEM]



[ITEM]
ID: extMaxIdleTime
NAME: 最大空闲时间
NS: EO
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 指定服务器停止外部应用之前的最大空闲时间，以释放空闲资源。
当设置为"-1"时，服务器将不会停止外部应用，除非在ProcessGroup模式下运行,
而在ProcessGroup模式下,闲置的外部应用将在30秒后停止.


默认值为: {val}-1{/val}
END_DESCR

SYNTAX: Integer number
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: [P] This feature is especially useful in the mass hosting environment where, in order to prevent files owned by
one virtual host from being accessed by the external application scripts of another virtual host, many different
applications are run at the same time in SetUID mode. Set this value low to prevent these external applications from
idling unnecessarily.
END_TIPS

[END_ITEM]



[ITEM]
ID: extAppPriority
NAME: 优先级
NS: EO
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO: Server {ITEM=ServGeneral_Help#serverPriority}

DESCR: 指定外部应用的优先级,值的范围是{val}-20{/}到{val}20{/}. 
一个小的数字意味着高优先级.外部应用进程的优先级不能比Web服务器高.
如果该优先级设置一个比服务器的优先级小的数字，则将使用服务器的优先级。
END_DESCR

SYNTAX: int
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: procSoftLimit
NAME: Process Soft Limit
NS: E
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: Limits the total number of processes that can be created on behalf of a user. All existing processes will be
counted against this limit, not just new processes to be started.


The limit can be set at the server level or at an individual external application level. The server-level limit will be used if it is
not set at an individual application level. The operating system's default setting will be used if this value is 0 or absent at
both levels.
END_DESCR

EDITTIP: Process soft/hard limit controls how many processes are allowed for one user. This includes all the processes
spawned by CGI application. OS level limit is used if not set.
END_EDITTIP

EDITTIP: Set to 0 or empty will use operation system default value for all soft/hard limits.
END_EDITTIP

EDITTIP: The soft limit is the value that the kernel enforces for the corresponding resource. The hard limit acts as a ceiling
for the soft limit
END_EDITTIP

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
To control how many processes LSWS will make for users in mod_suEXEC mode, use the suEXEC Max Conn setting.
PHP scripts can call for forking processes and the number of processes needed for normal functioning can be above the
suEXEC Max Conn setting. The main purpose of this limit is as a last line of defense to prevent fork bombs and other
attacks caused by PHP processes creating other processes.


Setting this setting too low can severely hurt functionality. The setting will thus be ignored below certain levels.


When <b>Run On Start Up</b> is set to "Yes (Daemon mode)", the actual process limit will be higher than this setting to
make sure parent processes are not limited.
END_TIPS

[END_ITEM]



[ITEM]
ID: procSoftLimit
NAME: 进程软限制
NS: O
REQUIRED:
APPLY: 3
SINCE:
SEE_ALSO:

DESCR: 限制用户可以创建的进程总数.所有现有的进程都将被计算在这个限制之内,而不仅仅是要启动的新进程。


该限制可以在服务器级别或单个外部应用级别进行设置.如果未在应用级别设置，则将使用服务器级别的限制.
如果该值为0或服务器级和应用级都没有设置,将使用操作系统的默认设置
END_DESCR

EDITTIP: Process soft/hard limit controls how many processes are allowed for one user. This includes all the processes
spawned by CGI application. OS level limit is used if not set.
END_EDITTIP

EDITTIP: Set to 0 or empty will use operation system default value for all soft/hard limits.
END_EDITTIP

EDITTIP: The soft limit is the value that the kernel enforces for the corresponding resource. The hard limit acts as a ceiling
for the soft limit
END_EDITTIP

SYNTAX: uint
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
PHP scripts can call for forking processes. The main purpose of this limit is as a last line of defense to prevent fork bombs
and other attacks caused by PHP processes creating other processes.


Setting this setting too low can severely hurt functionality. The setting will thus be ignored below certain levels.


When <b>Run On Start Up</b> is set to "Yes (Daemon mode)", the actual process limit will be higher than this setting to
make sure parent processes are not limited.
END_TIPS

[END_ITEM]



############# Tables #############


[TBL]
ID: extapp
NAME: 新外部应用
NS: EO

DESCR:
END_DESCR

CONT: extAppType
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extFCGI
NAME:
NS: EO

DESCR:
END_DESCR

CONT: extAppName extAppAddress maxConns env initTimeout
retryTimeout persistConn pcKeepAliveTimeout respBuffer autoStart
extAppPath backlog instances extUser extGroup extUmask
runOnStartUp extMaxIdleTime extAppPriority
memSoftLimit memHardLimit procSoftLimit procHardLimit
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extFCGIAuth
NAME: Fast CGI Authorizer
NS: EO

DESCR:
END_DESCR

CONT: extAppName extAppAddress maxConns env initTimeout
retryTimeout persistConn pcKeepAliveTimeout respBuffer autoStart
extAppPath backlog instances extUser extGroup extUmask
runOnStartUp extMaxIdleTime extAppPriority
memSoftLimit memHardLimit procSoftLimit procHardLimit
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extLSAPI
NAME: LiteSpeed SAPI
NS: EO

DESCR:
END_DESCR

CONT: extAppName extAppAddress maxConns env initTimeout
retryTimeout persistConn pcKeepAliveTimeout respBuffer autoStart
extAppPath backlog instances extUser extGroup extUmask
runOnStartUp extMaxIdleTime extAppPriority
memSoftLimit memHardLimit procSoftLimit procHardLimit
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extServlet
NAME: Servlet Engine
NS: EO

DESCR:
END_DESCR

CONT: extAppName extAppAddress maxConns pcKeepAliveTimeout
env initTimeout retryTimeout respBuffer
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extWS
NAME: Web Server
NS: EO

DESCR:
END_DESCR

CONT: extAppName expWSAddress maxConns
pcKeepAliveTimeout env initTimeout retryTimeout respBuffer
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extPL
NAME: Piped Logger
NS: EO

DESCR:
END_DESCR

CONT: extAppName extAppAddress maxConns env
extAppPath instances extUser extGroup extUmask
extAppPriority
END_CONT

SEE_ALSO:
[END_TBL]



[TBL]
ID: extLB
NAME: Load Balancer
NS: EO

DESCR:
END_DESCR

CONT: extAppName extWorkers
END_CONT

SEE_ALSO:
[END_TBL]



################ Pages ################


[PAGE]
ID: ExtApp_Help
NAME: 外部应用
NS: EO

DESCR: LiteSpeed网络服务器可以转发外部应用程序的请求，以处理和生成动态内容。


从2.0版本起, LiteSpeed Web Server已经支持了7种外部应用: CGI, FastCGI, web server, servlet
engine, LiteSpeed SAPI application, load balancer, and piped logger.

<ul>
  <li>
    CGI是Common Gateway Interface的缩写. 目前的标准是 CGI/1.1.
    CGI应用程序在独立的进程中运行. 一个CGI进程将为每个请求启动,并且在完成请求后退出.
  </li>
  <li>
    FastCGI 是一个快速,开源,安全的web服务器接口,它解决了CGI固有的性能问题,而没有引入专有API(应用编程接口),
    对于更多的信息,请访问 <a href="https://fastcgi-archives.github.io/">https://fastcgi-archives.github.io/</a>.


    在 LiteSpeed Web Server, FastCGI 应用可以发挥两种作用: 创造动态响应 (响应者角色) 或者
    授权请求 (授权者的角色). LiteSpeed Web Server进一步定义了两种类型的FastCGI应用程序:本地FastCGI和远程FastCGI.
    Web服务器可根据需要自动启动本地FastCGI应用程序.
    Web服务器不会启动远程FastCGI应用程序。 (它们可以在远程计算机或同一计算机上运行)
  </li>
  <li>
    Web服务器是指支持HTTP 1.0/1.1协议的服务器应用程序. LiteSpeed网络服务器可以作为一个透明的反向代理来加速和保护网络服务器和应用服务器.
    在与后端网络服务器进行通信时，LiteSpeed将始终尝试利用持久连接，以实现最高性能。
  </li>
  <li>
    像Apache Tomcat和Jetty,servlet引擎是实现了Java servlets和Java Server Pages的应用程序.
    LiteSpeed可以通过AJPv1.3（Apache JServ协议1.3版）与servlet引擎进行通信.
    Servlet引擎不能由Web服务器启动，可以设置在远程机器上运行.
  </li>
  <li>
    A LiteSpeed SAPI (LiteSpeed Server Application Programming Interface) application is an application that communicates
    with LiteSpeed Web Server through LSAPI, a fast, scalable server interface specifically designed for LiteSpeed Web
    Server to achieve maximum efficiency.


    LSAPI's mechanism of action are similar to FastCGI, but LSAPI applications can be up to 30% faster than comparable
    FastCGI applications. LSAPI is highly recommended over FastCGI for supported applications. (LSAPI currently supports
    applications written in PHP, Ruby, and Python.)


    For more information about LSAPI, please visit
    <a href="https://www.litespeedtech.com/open-source/litespeed-sapi">
      https://www.litespeedtech.com/open-source/litespeed-sapi
    </a>.
  </li>
  <li>
    A load balancer is a virtual external application, which assigns requests to backend worker applications based on
    workload. Worker applications can be CGI, FastCGI, web server, servlet engine, or LSAPI applications. Different types of
    applications can be mixed together under one load balancer. Load balancers and piped loggers cannot be used as
    worker applications.
  </li>
  <li>
    A piped logger is an application that can process access logs in real-time, writing an access log into database or
    performing real-time statistics calculations, for example.
  </li>
</ul>


Unlike CGI applications, FastCGI applications, LSAPI applications, and servlet engine do not exit after processing a
request. The application process will stay/persist and serve as many requests as it can. The socket connection can be
reused for multiple requests as well.


External applications can be set up in the {PAGE=ExtApp_Help} section. External applications cannot, however, function
on their own. Additional settings must be configured so that the web server knows which requests to send to which
application. There are two ways to to configure this in LiteSpeed Web Server:


<ol>
  <li> Set the external application as a handler for a specific context.</li>
  <li> Set the external application as a handler of a script language via file suffix binding.</li>
</ol>


FastCGI applications, LSAPI applications, web servers, servlet engines, and load balancers have to be defined in the
{PAGE=ExtApp_Help} section before you can configure them to handle a context or script suffix. It is not necessary to
define CGI applications in the {PAGE=ExtApp_Help} section.


External applications can be configured at the server level or at the virtual host level. When configured at the server level, the
application can be used by all virtual hosts. When configured at the virtual host level, it can only be used by that virtual host.
END_DESCR

CONT: extapp
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_FCGI
NAME: Fast CGI App
NS: EO

DESCR:
END_DESCR

CONT: extFCGI
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_FCGI_Auth
NAME: Fast CGI Authorizer
NS: EO

DESCR:
END_DESCR

CONT: extFCGIAuth
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_LSAPI
NAME: LiteSpeed SAPI App
NS: EO
DESCR:
END_DESCR

CONT: extLSAPI
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_Servlet
NAME: Servlet Engine
NS: EO

DESCR:
END_DESCR

CONT: extServlet
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_WS
NAME: Web Server
NS: EO

DESCR:
END_DESCR

CONT: extWS
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_PL
NAME: Piped Logger
NS: EO

DESCR:
END_DESCR

CONT: extPL
END_CONT

SEE_ALSO:
[END_PAGE]



[PAGE]
ID: External_LB
NAME: Load Balancer
NS: EO

DESCR:
END_DESCR

CONT: extLB
END_CONT

SEE_ALSO:
[END_PAGE]


[END_HELPDOC]
