[HELPDOC]


############# OS Optimization #############


[ITEM]
ID: eventDispatcher
NAME: I/Oイベント・ディスパッチャー
SINCE: 

DESCR: 使用するI / Oイベント・ディスパッチャーを指定します。
オペレーティングシステムによって、さまざまなタイプのイベントディスパッチャがサポートされています:
<ul>
  <li>Linux カーネル 2.4.x サポート:
     <ul><li>poll</li></ul>
  </li>
  <li>Linux カーネル 2.6.x サポート:
     <ul><li>poll</li><li>epoll</li></ul>
  </li>
  <li>FreeBSD サポート:
     <ul><li>poll</li><li>kqueue</li></ul>
  </li>
  <li>Solaris サポート:
     <ul><li>poll</li><li>devpoll</li></ul>
  </li>
  <li>Mac OS X 10.3以降のサポート:
     <ul><li>poll</li><li>kqueue</li></ul>
  </li>
</ul>
  {val}poll{/}はすべてのプラットフォームでサポートされており、デフォルトの選択です。
   トラフィックの多いWebサイトでは、代替イベントディスパッチャを使用してサーバーのスケーラビリティを向上させることができます。
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: ramDiskPath
NAME: RAMディスクパス
NS: LE
SINCE: 4.2.4

DESCR: RAMディスクパスを設定すると、RAMディスクの場所を指定できます。
RAMディスクは、メモリに格納されたどこからでも書き込み可能なディレクトリです。
余分なRAMを持つサーバーは、このRAMディスクからのコンテンツを提供することによってディスクI/Oを減らすことができます。
RAMからのコンテンツへのアクセスは、ディスクからのデータの読み取りよりもはるかに高速です。
十分なメモリがある場合、LSWSはこのRAMディスクを使用してパフォーマンスを最適化します。


（RAMディスクは、Webサーバーで使用する前にOSセットアップで指定する必要があります。
多くのLinuxディストリビューションは、デフォルトでRAMディスクとして/dev/shmを割り当てますが、これらの設定はお使いのOSによって異なります。) 
END_DESCR

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: SSLStrongDhKey
NAME: SSL強力なDHキー
NS: LEO
SINCE: 

DESCR: SSLハンドシェイクに2048または1024ビットのDHキーを使用するかどうかを指定します。
「Yes」に設定すると、2048ビットのSSLキーと証明書に2048ビットのDHキーが使用されます。
他の状況でも1024ビットのDHキーが引き続き使用されます。
デフォルトは「はい」です。


以前のバージョンのJavaでは、1024ビット以上のDHキーサイズはサポートされていません。
Javaクライアントの互換性が必要な場合は、これを「いいえ」に設定する必要があります。
END_DESCR

SYNTAX: ラジオ
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



############# Connection #############


[ITEM]
ID: maxConnections
NAME: 最大接続数
NS: LO
SINCE: 

DESCR: サーバーが受け入れることができる同時接続の最大数を指定します。
これには、プレーンTCP接続とSSL接続の両方が含まれます。
最大同時接続制限に達すると、サーバーはアクティブな要求が完了するとキープアライブ接続を閉じます。 
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: サーバーが "root"ユーザーによって起動されると、サーバーはプロセスごとのファイル記述子の制限を自動的に調整しようとしますが、失敗した場合は手動でこの制限を増やす必要があります。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxConnections
NAME: 最大接続数
NS: E
SINCE: 

DESCR: サーバーが受け入れることができる同時接続の最大数を指定します。
これには、プレーンTCP接続とSSL接続の両方が含まれます。
この設定は、Standard エディションの場合は{val}150{/}、VPSライセンスの場合は{VAL}500{/}、Ultra VPSライセンスの場合は{val}800{/}、サーバーソフトウェアのエディションまたはライセンスで設定されたハードリミットです。
最大同時接続制限に達すると、サーバーはアクティブな要求が完了するとキープアライブ接続を閉じます。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: サーバーが "root"ユーザーによって起動されると、サーバーはプロセスごとのファイル記述子の制限を自動的に調整しようとしますが、失敗した場合は手動でこの制限を増やす必要があります。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxSSLConnections
NAME: SSL接続の最大数
SINCE: 

DESCR: サーバーが受け入れる同時SSL接続の最大数を指定します。
同時SSL接続と非SSL接続の合計が{ITEM=maxConnections}で指定された制限を超えることはできないため、許可される同時SSL接続の実際の数はこの制限より小さくなければなりません。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: connTimeout
NAME: 接続タイムアウト（秒）
SINCE: 

DESCR: 1つの要求の処理中に許容される最大接続アイドル時間を指定します。
この時間の間、接続がアイドル状態の場合、つまりI/Oアクティビティがない場合は、接続が閉じられます。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ]潜在的なDoS攻撃の間に不在接続を回復するのに役立つように、この値を低く設定します。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxKeepAliveReq
NAME: 最大キープアライブ要求
SINCE: 

DESCR: キープアライブ（永続的）セッションを介して処理できる要求の最大数を指定します。
この制限に達すると接続は終了します。
バーチャルホストごとにこの制限を設定することもできます。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]適度に高い値に設定します。
"1"または "0"の値はキープアライブを無効にします。
END_TIPS

[END_ITEM]



[ITEM]
ID: smartKeepAlive
NAME: スマートキープアライブ
SINCE: 

DESCR: バーチャルホスト{ITEM=VirtualHosts_Help#vhSmartKeepAlive} DESCR：スマートキープアライブをオンにするかどうかを指定します。
このオプションは、{ITEM=maxKeepAliveReq}が1より大きい場合にのみ有効です。
有効にすると、バーチャルホストレベルで有効/無効にすることもできます。
スマートキープアライブは、JavaScript、CSSスタイルシート、およびイメージファイルの要求に対してのみキープアライブ接続を確立します。
htmlページの場合、接続は維持されません。
これにより、より多くのユーザーに効率的にサービスを提供できます。
通常、Webページには、最初のリクエスト後にブラウザによってキャッシュされる複数のイメージとスクリプトが含まれています。

これらの非HTML静的ファイルを単一のキープアライブ接続で送信し、text/htmlファイルを別の非キープアライブ接続経由で送信する方が効率的です。
この方法は、アイドル状態の接続を減らし、より多くの同時要求およびユーザーを処理するための容量を増加させます。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]高負荷のWebサイトでこれを有効にします。
END_TIPS

[END_ITEM]



[ITEM]
ID: keepAliveTimeout
NAME: キープアライブタイムアウト（秒）
SINCE: 

DESCR: キープアライブ接続からの要求間の最大アイドル時間を指定します。
この期間中に新しい要求が受信されない場合、接続は閉じられます。
この設定は、HTTP/1.1接続にのみ適用されます。
HTTP/2接続は、設計によって長いキープアライブタイムアウトを持ち、この設定の影響を受けません。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ & パフォーマンス]ロードする必要がある単一のページで参照されるアセットが多くある場合、クライアントからの後続のリクエストを待機するのに十分な時間だけこの値を設定することをお勧めします。
キープアライブ接続で次のページが配信されることを期待して、これを長く設定しないでください。
多くのアイドル状態のキープアライブ接続を維持することはサーバーリソースの浪費であり、（D）DoS攻撃によって活用される可能性があります。
{val}2-5{/}秒はほとんどのアプリケーションにとって妥当な範囲です。
LiteSpeedは非キープアライブ環境で非常に効率的です。
END_TIPS

[END_ITEM]



[ITEM]
ID: sndBufSize
NAME: 送信バッファサイズ（バイト）
NS: LEO
SINCE: 

DESCR: 各TCPソケットの送信バッファサイズ。
{val}512K{/}は許容されるバッファの最大サイズです。
END_DESCR

EDITTIP: 数字は、10240,10K、または1Mとして表すことができます。
END_EDITTIP

EDITTIP: 送信/受信バッファサイズが0の場合、OSのデフォルトTCPバッファサイズが使用されます。
END_EDITTIP

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]オペレーティングシステムのデフォルトのバッファサイズを使用するには、この値を "未設定"のままにするか、0に設定することをお勧めします。

[パフォーマンス] Webサイトで大きな静的ファイルが使用されている場合は、送信バッファサイズを大きくしてパフォーマンスを向上させてください。

[パフォーマンス]これを低い値に設定すると、ソケットあたりのスループットとメモリ使用量が減少し、メモリがボトルネックになった場合にサーバーがより多くの同時ソケットを持つことが可能になります。
END_TIPS

[END_ITEM]



[ITEM]
ID: rcvBufSize
NAME: 受信バッファサイズ（バイト）
SINCE: 

DESCR: 各TCPソケットの受信バッファーサイズ。
{val}512K{/}は許容されるバッファの最大サイズです。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]オペレーティングシステムのデフォルトのバッファサイズを使用するには、この値を "未設定"のままにするか、0に設定することをお勧めします。

[パフォーマンス]大きい受信バッファは、大きなペイロード、すなわちファイルアップロードで着信要求を処理するときのパフォーマンスを向上させます。

[パフォーマンス]これを低い値に設定すると、ソケットあたりのスループットとメモリ使用量が減少し、メモリがボトルネックになった場合にサーバーがより多くの同時ソケットを持つことが可能になります。
END_TIPS

[END_ITEM]



############# Request/Response #############


[ITEM]
ID: maxReqURLLen
NAME: 最大リクエストURLの長さ（バイト）
SINCE: 

DESCR: リクエストURLの最大サイズを指定します。
URLは、クエリ文字列を含むサーバーリソースへのアクセスに使用されるフルテキストアドレスです。 {val}8192{/}バイトがハードリミットです。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティとパフォーマンス]メモリ使用量を減らし、偽のリクエストとDoS攻撃を特定するのに役立つよう、適度に低く設定します。

HTTP GETメソッドがPOSTの代わりに大きなクエリ文字列とともに使用されていない限り、2-3KはほとんどのWebサイトにとって十分です。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxReqHeaderSize
NAME: 最大要求ヘッダーサイズ（バイト）
SINCE: 

DESCR: 要求URLを含むHTTP要求ヘッダーの最大サイズを指定します。
ハード制限は{val}16380{/}バイトです。 
END_DESCR

EDITTIP: 数字は、10240,10K、または1Mとして表すことができます。
END_EDITTIP

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティとパフォーマンス]メモリ使用量を減らし、偽のリクエストとDoS攻撃を特定するのに役立つよう、適度に低く設定します。

4-8Kは、ほとんどのWebサイトで十分です。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxReqBodySize
NAME: 最大リクエストボディサイズ（バイト）
SINCE: 

DESCR: HTTPリクエスト本文の最大サイズを指定します。
32ビットOSの場合、{val}2GB{/}はハード制限です。
64ビットOSの場合、実質的に無制限です。 
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ] DoS攻撃を防ぐには、この制限を実際に必要なものだけに制限してください。
スワッピング空間には、この制限に対応するための十分な空き領域が必要です。
END_TIPS

[END_ITEM]



[ITEM]
ID: maxDynRespHeaderSize
NAME: 最大動的応答ヘッダーサイズ（バイト）
SINCE: 

DESCR: 動的に生成される応答の最大ヘッダーサイズを指定します。 ハードリミットは{val}8KB{/}です。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:[信頼性 & パフォーマンス]適度に低く設定すると、外部アプリケーションによって動的に生成された不正な応答を認識するのに役立ちます。 
END_TIPS

[END_ITEM]



[ITEM]
ID: maxDynRespSize
NAME: 最大動的応答ボディサイズ（バイト）
SINCE: 

DESCR: 動的に生成される応答の最大ボディサイズを指定します。
ハードリミットは{val}2047MB{/}です。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [信頼性 & パフォーマンス]不適切なレスポンスを識別するのに役立ちます。
不正なスクリプトに無限ループが含まれて無限大の応答が生じることは珍しいことではありません。
END_TIPS

[END_ITEM]



############# Static File Delivery Optimization #############


[ITEM]
ID: maxCachedFileSize
NAME: 最大キャッシュサイズの小さいファイルサイズ（バイト）
SINCE: 

DESCR: 事前に割り当てられたメモリバッファにキャッシュされる最大の静的ファイルを指定します。
静的ファイルは、メモリバッファキャッシュ、メモリマップキャッシュ、プレーンリード/ライト、およびsendfile（）の4つの方法で提供できます。
サイズがこの設定より小さいファイルはメモリバッファキャッシュから提供されます。
サイズがこの設定より大きく、{ITEM=maxMMapFileSize}より小さいファイルは、メモリマップドキャッシュから処理されます。
{ITEM=maxMMapFileSize}より大きいサイズのファイルは、プレーン・リード/ライトまたはsendfile（）を介して処理されます。
メモリバッファキャッシュから4Kより小さい静的ファイルを提供することが最適です。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: totalInMemCacheSize
NAME: 小ファイルキャッシュサイズ合計（バイト）
SINCE: 

DESCR: 小さな静的ファイルをキャッシュ/提供するためにバッファーキャッシュに割り振ることができる合計メモリーを指定します。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: maxMMapFileSize
NAME: 最大MMAPファイルサイズ（バイト）
SINCE: 

DESCR:  メモリマップされる最大の静的ファイル（MMAP）を指定します。
  静的ファイルは、メモリバッファキャッシュ、メモリマップキャッシュ、プレーンリード/ライト、およびsendfile（）の4つの方法で提供できます。
サイズが{ITEM=maxCachedFileSize}より小さいファイルはメモリバッファキャッシュから提供されます。
サイズが{ITEM=maxCachedFileSize}よりも大きいが最大MAPファイルサイズより小さいファイルは、メモリマップドキャッシュから提供されます。
最大MMAPファイルサイズよりも大きいファイルは、プレーンな読み取り/書き込みまたはsendfile（）を介して提供されます。
サーバは32ビットのアドレス空間（2GB）を持っているので、非常に大きなファイルをメモリに格納することは推奨されません。
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: totalMMapCacheSize
NAME: MMAPキャッシュサイズ合計（バイト）
SINCE: 

DESCR: 中規模の静的ファイルをキャッシュ/配信するためにメモリマップされたキャッシュに割り当てることができる合計メモリを指定します。 
END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: useSendfile
NAME: sendfile（）を使用する
SINCE: 

DESCR: 静的ファイルを提供するためにsendfile（）システムコールを使用するかどうかを指定します。
静的ファイルは、メモリバッファキャッシュ、メモリマップキャッシュ、プレーンリード/ライト、およびsendfile（）の4つの方法で提供できます。
{ITEM=maxCachedFileSize}より小さいファイルはメモリバッファキャッシュから提供されます。
{ITEM=maxCachedFileSize}より大きいが、{ITEM=maxMMapFileSize}より小さいファイルは、メモリマップドキャッシュから提供されます。
{ITEM=maxMMapFileSize}より大きいファイルは、プレーンな読み取り/書き込みまたはsendfile（）で処理されます。
Sendfile（）は、非常に大きな静的ファイルを処理するときにCPU使用率を大幅に下げることができる「ゼロコピー」システムコールです。
Sendfile（）は最適化されたネットワークカードカーネルドライバを必要とするため、一部の小規模ベンダーのネットワークアダプタには適していない可能性があります。
 
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: useAIO
NAME: AIOを使用する
NS: E
SINCE: 

DESCR: 静的ファイルを提供するためにAIOを使用するかどうかを指定します。
サーバーのI/O待機時間が長い場合は、AIOが役立ちます。
64ビットオペレーティングシステムの場合、AIOパフォーマンスを向上させるためにプロセスアドレス空間にファイルをマップするオプションがあります。

END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: AIOBlockSize
NAME: AIOブロックサイズ
NS: E
SINCE: 

DESCR: AIOの送信ブロックサイズを指定します。
このブロックサイズに処理されるファイルの総数を掛けた値は、サーバーの物理メモリより小さくなければなりません。それ以外の場合、AIOは役に立ちません。
サーバーに十分なメモリがある場合は、より大きなサイズを選択できます。
デフォルト値は "1M"です。

END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: fileETag
NAME: ファイルETag
SINCE: 4.2.2

DESCR: ファイルのinode、last-modified time、およびsize属性を使用するかどうかを指定します。
静的ファイル用のETag HTTP応答ヘッダーを生成します。
3つの属性はすべてデフォルトで有効になっています。
ミラー化されたサーバーから同じファイルを提供する予定の場合は、iノードを含めないでください。 それ以外の場合、1つのファイルに対して生成されるETagは、異なるサーバーで異なります。

END_DESCR

SYNTAX: チェックボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



############# GZIP Compression #############


[ITEM]
ID: enableGzipCompress
NAME: 圧縮を有効にする
SINCE: 

DESCR: 静的HTTP応答と動的HTTP応答の両方のGZIP圧縮を制御します。 
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]ネットワーク帯域幅を節約するために有効にします。
html、css、およびjavascriptファイルなどのテキストベースの応答が最大の利益をもたらし、平均で元のサイズの半分に圧縮できます。
END_TIPS

[END_ITEM]



[ITEM]
ID: enableDynGzipCompress
NAME: 動的圧縮を有効にする
SINCE: 

DESCR: 動的に生成されるHTTPレスポンスのGZIP圧縮を制御します。
動的なGZIP圧縮を有効にするには、{ITEM=enableGzipCompress}を{val}はい{/}に設定する必要があります。
END_DESCR

EDITTIP: 動的GZIP圧縮コントロールは、GZIP圧縮が有効な場合にのみ有効です。
END_EDITTIP


SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]動的応答を圧縮すると、CPUとメモリの使用率は向上しますが、ネットワーク帯域幅は節約されます。
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipCompressLevel
NAME: 圧縮レベル（動的コンテンツ）
SINCE: 

DESCR: 動的コンテンツの圧縮レベルを指定します。
{val}1{/}（最低）から{val}9{/}（最高）までの範囲です。
デフォルトは{val}2{/}です。
END_DESCR

EDITTIP: GZIP圧縮レベルの範囲は1（最小）〜9（最大）です。
END_EDITTIP

SYNTAX: 1と9の間の数字。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]高い圧縮レベルは、より多くのメモリとCPUサイクルを使用します。
マシンに追加の電源がある場合は、それをより高いレベルに設定することができます。
6と9の間に大きな違いはありませんが、9ではCPUサイクルが多く使用されます。
END_TIPS

[END_ITEM]



[ITEM]
ID: compressibleTypes
NAME: 圧縮可能なタイプ
SINCE: 

DESCR: 圧縮できるMIMEタイプを指定します。
END_DESCR

EDITTIP: 「圧縮可能タイプ」は、コンマで区切られた圧縮可能なMIMEタイプのリストです。
* / *、text / *などのMIMEタイプにワイルドカード "*"を使用できます。
あたたは、 "！" を特定のタイプを除外するために前面に置くことができます。
"！"を使用すると、リストの順序が重要になります。
たとえば、 "text/*、！text/css、！text/js"のようなリストは、cssとjsを除くすべてのテキストファイルを圧縮します。
END_EDITTIP

SYNTAX: MIMEタイプのリストをカンマで区切って指定します。
ワイルドカード "*"と否定記号 "！" はtext/*、！text/jsなどで許可されています。
END_SYNTAX

EXAMPLE: text/cssではないtext/*を圧縮する場合は、次のようなルールを設定できます。
{val}text/*, !text/css{/}. "!"はそのMIMEタイプを除外します。
END_EXAMPLE

TIPS: [パフォーマンス] GZIP圧縮の恩恵を受けるタイプのみを許可します。
gif / png / jpegイメージやフラッシュファイルなどのバイナリファイルは、圧縮の恩恵を受けません。
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipAutoUpdateStatic
NAME: 静的ファイルの自動更新
SINCE: 

DESCR: Sサーバが圧縮可能な静的ファイルのGZIP圧縮バージョンを自動的に作成/更新するかどうかを指定します。
{ITEM=compressibleTypes}にリストされているMIMEタイプのファイルが要求されたときに{val}はい{/}に設定されている場合、サーバーは圧縮ファイルのタイムスタンプに応じてファイルの対応する圧縮バージョンを作成または更新できます。
この圧縮ファイルは、{ITEM=gzipCacheDir}の下に作成されます。
ファイル名は元のファイルのパスのMD5ハッシュに基づいています。 
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipCacheDir
NAME: 静的GZIPキャッシュディレクトリ
SINCE: 

DESCR: 静的コンテンツ用の圧縮ファイルの格納に使用されるディレクトリのパスを指定します。
デフォルトは{ITEM=swappingDir}です。
END_DESCR

SYNTAX: ディレクトリパス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipStaticCompressLevel
NAME: 圧縮レベル（静的コンテンツ）
SINCE: 

DESCR: 静的コンテンツの圧縮レベルを指定します。
{val}1{/}（最低）から{val}9{/}（最高）までの範囲です。
デフォルトは{val}6{/}です。
END_DESCR

SYNTAX: 1から9の間の数字。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipMaxFileSize
NAME: 最大静的ファイルサイズ（バイト）
SINCE: 

DESCR: 静的ファイルの最大サイズを指定します。
サーバーは自動的に圧縮ファイルを作成します。 
END_DESCR

SYNTAX: 1K以上のバイト数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス]大規模なファイルに対してサーバーが圧縮ファイルを作成/更新することはお勧めできません。
圧縮は、サーバープロセス全体をブロックし、圧縮が完了するまで、それ以上の要求は処理できません。
END_TIPS

[END_ITEM]



[ITEM]
ID: gzipMinFileSize
NAME: 最小静的ファイルサイズ（バイト）
SINCE: 

DESCR: 静的ファイルの最小サイズを指定します。
サーバーは対応する圧縮ファイルを作成します。
END_DESCR

SYNTAX: バイト数は200より小さくない。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 帯域幅の節約はごくわずかなため、非常に小さいファイルを圧縮する必要はありません。
END_TIPS

[END_ITEM]



########## SSL Session ##########


[ITEM]
ID: sslSessionCache
NAME: セッションキャッシュを有効にする
NS: LEO
SINCE: 

EDITTIP: Sセッションキャッシュを使用すると、クライアントはSSLハンドシェイクを再実行せずに一定時間内にセッションを再開できます。
これを行うには、<b>セッションキャッシュを有効にする</b>を使用するか、セッションチケットを作成して使用して、クライアントにセッションIDを割り当てます。
END_EDITTIP

DESCR: セッションIDキャッシングを有効にします。
「未設定」の場合、デフォルトは「いいえ」です。 （Opensslデフォルト）

END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionCacheSize
NAME: セッションキャッシュサイズ（バイト）
SINCE: 

DESCR: キャッシュに格納するSSLセッションIDの最大数を設定します。
デフォルトは1,000,000です。

END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionCacheTimeout
NAME: セッションキャッシュタイムアウト（秒）
SINCE: 

DESCR: この値は、再ネゴシエーションが必要な前にセッションIDがキャッシュ内で有効である期間を決定します。
デフォルトは3,600です。

END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionTickets
NAME: セッションチケットを有効にする
NS: LEO
SINCE: 

DESCR: セッションチケットを有効にします。
「未設定」の場合、サーバーはopenSSLのデフォルトチケットを使用します。

END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: shmDefaultDir
NAME: デフォルトのSHMディレクトリ
NS: LEO
SINCE: 

DESCR: 共有メモリのデフォルトディレクトリを指定されたパスに変更します。
ディレクトリが存在しない場合は作成されます。
特に指定のない限り、すべてのSHMデータはこのディレクトリに保存されます。

END_DESCR

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionTicketLifetime
NAME: SSLセッションチケットの有効期間（秒）
SINCE: 

DESCR: この値は、再ネゴシエーションが必要となる前にセッションチケットが有効になる期間を決定します。
デフォルトは3,600です。


END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionTicketKeyFile
NAME: SSLセッションチケットキーファイル
NS: L
SINCE: 
SEE_ALSO:

EDITTIP: チケットがサーバーによって生成されている場合、セッションチケットは自動的にローテーションされます。
<b>SSLセッションチケットキーファイル</b>オプションを使用して独自のセッションチケットを作成および管理する場合は、cronジョブを使用してチケットを自分自身でローテーションする必要があります。
END_EDITTIP

EDITTIP: クライアントが異なるロードバランサによって処理されたときにチケットを再発行しないようにするには、高可用性設定に<b>SSLセッションチケットキーファイル</b>を使用する必要があります。
END_EDITTIP

DESCR: ASSLチケットキーを管理者が作成または維持できるようにします。
ファイルの長さは48バイトでなければなりません。 このオプションを空のままにすると、ロードバランサは独自のキーセットを生成してローテーションします。 


IMPORTANT: 重要：転送の秘密を維持するには、<b>SSLセッションチケットの有効期間</b>秒単位でキーを変更することを強くお勧めします。
これができない場合は、このフィールドを空のままにすることをお勧めします。

END_DESCR

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslSessionTicketKeyFile
NAME: SSLセッションチケットキーファイル
NS: EO
SINCE: 
SEE_ALSO:

EDITTIP: チケットがサーバーによって生成されている場合、セッションチケットは自動的にローテーションされます。
<b>SSLセッションチケットキーファイル</b>オプションを使用して独自のセッションチケットを作成および管理する場合は、cronジョブを使用してチケットを自分自身でローテーションする必要があります。
END_EDITTIP

DESCR: SSLチケットキーを管理者が作成または維持できるようにします。
ファイルの長さは48バイトでなければなりません。
このオプションを空のままにすると、ロードバランサは独自のキーセットを生成してローテーションします。


重要：転送秘密を維持するには、<b> SSLセッションチケットの有効期間</b>秒単位でキーを変更することを強くお勧めします。
これができない場合は、このフィールドを空のままにすることをお勧めします。

END_DESCR

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslDynCertsBaseDir
NAME: SSL動的証明書ベースディレクトリ
SINCE: 

DESCR: 動的SSL証明書が格納されるベースディレクトリを設定します。
証明書、鍵、およびCAバンドルの名前はそれぞれ「cert」、「key」、および「ca」とする予定です。


END_DESCR

SYNTAX: パス
END_SYNTAX

EXAMPLE: $SERVER_ROOT/certStore/
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslDynCertsNumLevels
NAME: SSL動的証明書のレベル
SINCE: 

DESCR: 証明書ファイルが格納されるディレクトリレベルの数。 


これはPHPに似ています<b><a href="http://php.net/manual/en/session.configuration.php#ini.session.save-path">Session.save_path</a></b>

END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 2に設定すると、 "example.com"はBaseDir/e/x/example.com/
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslDynCertsExpire
NAME: SSL動的証明書有効期限（秒）
SINCE: 

DESCR: 動的に読み込まれた証明書が無効にされる前に、有効期限を設定します。

END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslDynCertsRefresh
NAME: SSL動的証明書リフレッシュ時間（秒）
SINCE: 

DESCR: ファイルの有効性をチェックする前に、動的に読み込まれた証明書の更新時間を設定します。
リフレッシュ時間前にファイルが削除された場合、証明書は無効になります。
リフレッシュ時間前にファイルが更新されると、証明書が更新されます。

END_DESCR

SYNTAX: 整数
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: sslEnableMultiCerts
NAME: 複数のSSL証明書を有効にする
SINCE: 

DESCR:  リスナー/バーチャルホストが複数のSSL証明書を設定できるようにします。
複数の証明書が有効な場合、証明書/キーは命名規則に従うことが想定されます。
証明書の名前がserver.crtの場合、その他の可能な証明書名はserver.crt.rsa、server.crt.dsa、server.crt.eccです。
「未設定」の場合、デフォルトは「いいえ」です。

END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



############# Tables #############


[TBL]
ID: osTuning
NAME: OSの最適化
NS: LE

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: osTuning
NAME: OSの最適化
NS: O

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: connTuning
NAME: 接続
NS: L

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: connTuning
NAME: 接続のチューニング
NS: EO

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: reqTuning
NAME: 要求/応答のチューニング
NS: LEO

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: staticTuning
NAME: 静的ファイル配信の最適化
NS: E

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: staticTuning
NAME: 静的ファイル配信の最適化
NS: O

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: gzipTuning
NAME: GZIP圧縮チューニング
NS: EO

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: gzipTuning
NAME: GZIP圧縮チューニング
NS: L

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: sslGlobal
NAME: SSLグローバル設定
NS: LEO

DESCR: 
END_DESCR

[END_TBL]



[TBL]
ID: sslDynSNI
NAME: SSL動的SNI
NS: L

DESCR: SSL動的SNIを使用すると、ロードバランサが要求を処理するときにクライアントのサイト固有の証明書を提供するために使用できるディレクトリを指定することによって、ロードバランサの汎用証明書を使用しないようにできます。
END_DESCR

[END_TBL]



################ Pages ################


[PAGE]
ID: ServTuning_Help 
NAME: サーバーのチューニング
NS: L

DESCR: 
END_DESCR

[END_PAGE]



[PAGE]
ID: ServTuning_Help 
NAME: サーバーのチューニング
NS: E

DESCR: 
END_DESCR

[END_PAGE]



[PAGE]
ID: ServTuning_Help 
NAME: サーバーのチューニング
NS: O

DESCR: 
END_DESCR

[END_PAGE]


[END_HELPDOC]
