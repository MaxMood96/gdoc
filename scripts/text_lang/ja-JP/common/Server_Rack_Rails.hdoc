[HELPDOC]


########## Rack//Rails Settings ##########


[ITEM]
ID: rubyBin
NAME: Rubyパス
SINCE: 
SEE_ALSO: 

DESCR: Ruby実行可能ファイルへの指定されたパス。
Rubyがどこにインストールされているかによって、/usr/bin/ruby又は/usr/local/bin/rubyになります。
END_DESCR

EDITTIP: <b>Rubyパス</b>は、Ruby実行ファイルの絶対パスです。
たとえば、/usr/local/bin/ruby
END_EDITTIP

SYNTAX: 絶対パス。
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: railsEnv
NAME: 実行時モード
SINCE: 
SEE_ALSO: 

DESCR: Rack/Railsが "Development"、"Production"、又は"Staging"のいずれのモードで実行されるかを指定します。
デフォルトは "Production"です。
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



########## Rack/Rails Shared Hosting ##########


[ITEM]
ID: enableRailsHosting
NAME: 共有ホスティングを有効にする
SINCE: 
SEE_ALSO: 

DESCR: Rack/Rails共有ホスティングを有効にするかどうかを指定します。
デフォルトは "無効"です。

END_DESCR

SYNTAX: ラジオボックスから選択 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: railsAppLimit
NAME: アカウントごとの最大アプリ数
SINCE: 
SEE_ALSO: 

DESCR: アカウントごとに作成できるRack/Railsアプリケーションの最大数を指定します。 デフォルトは "1"です。

END_DESCR

SYNTAX: 整数 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス] Rack/Railsアプリケーションは、大量のシステムリソースを消費する可能性があります。
したがって、この制限をあまり高く設定しないことをお勧めします。
そうしないと、1人のユーザーが悪用した場合にサーバー全体のパフォーマンスに影響を与える可能性があります。
END_TIPS

[END_ITEM]



[ITEM]
ID: rubyProcLimit
NAME: アカウントごとの最大Rubyプロセス
SINCE: 
SEE_ALSO: 

DESCR: アカウントごとに作成できるRubyプロセスの最大数を指定します。
デフォルトは "10"です。
1つのアカウントで複数のRack/Railsアプリケーションを実行すると、すべてのアプリケーションのRubyプロセスの合計数がこの制限を超えることはできません。
各Rubyプロセスは大量のシステムリソースを消費しますが、上限を設定することはお勧めしません。
そうでないと、1人のユーザーがそれを悪用した場合にサーバー全体のパフォーマンスに影響します。

END_DESCR

SYNTAX: 整数 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [パフォーマンス] Rubyプロセスは大量のシステムリソースを消費する可能性があります。
したがって、この制限をあまり高く設定しないことをお勧めします。
そうしないと、1人のユーザーがサーバーを乱用した場合にサーバー全体のパフォーマンスに影響を与える可能性があります。
END_TIPS

[END_ITEM]



############# Tables #############


[TBL]
ID: railsDefault
NAME: Ruby Rack/Railsの設定
NS: EO

DESCR: Ruby Rack/Railsアプリケーションのデフォルト設定。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsHosting
NAME: Rack/Rails共有ホスティング
NS: EO

DESCR: LiteSpeedのRack/Rails共有ホスティング設定では、高性能でスケーラビリティの高いRuby LSAPIモジュールを使用して、お客様のRuby使用を簡単に制御できます。


LiteSpeedのRack/Railsホスティングソリューションは、
最小のサーバーリソース要件でパフォーマンスを向上させます。
さらに、既存のすべてのWebホスティングコントロールパネルと互換性があります。 


ユーザが管理できるRack/Rails設定ファイル（".ls_rails_config"）は、ユーザのホームディレクトリまたはバーチャルホストのルートディレクトリにあります。
構文は次の通りです：

<blockquote>
#RailsApp <name> <App Path> <Rails Evn> <Children Processes> <RunOnStart>

RailsApp testApp "/lsws/testrails" "development" 4 1 


#RailsAppMap <name> <domain> <URI> 

RailsAppMap testApp "testrails.com" "/" 

RailsAppMap testApp "test.testrails.com" "/" 
</blockquote>

「App Path」は、ユーザーのホームディレクトリまたはバーチャルディレクトリ
ホストルートディレクトリ。


このファイルに触れるたびに、Rack/Railsアプリケーションが再起動されます。
END_DESCR

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: Rails_Help
NAME: Rack/Railsの設定
NS: O

DESCR: 
END_DESCR

SEE_ALSO: 
[END_PAGE]


[END_HELPDOC]
