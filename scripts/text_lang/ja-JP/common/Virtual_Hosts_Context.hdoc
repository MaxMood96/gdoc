[HELPDOC]


########## New Context ##########


[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: L
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 作成されるコンテキストのタイプによって、その用途が決まります。


<b>リダイレクト</b>コンテキストは、内部リダイレクトURIまたは外部リダイレクトURIを設定するために使用されます。<br>
<b>ロードバランサ</b>コンテキストは、そのコンテキストに異なるクラスタを割り当てるために使用されます。
END_DESCR

EDITTIP: <b>ロードバランサ</b>コンテキストは、そのコンテキストに異なるクラスタを割り当てるために使用されます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストは、内部リダイレクトURIまたは外部リダイレクトURIを設定するために使用されます。
END_EDITTIP

[END_ITEM]



[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: E
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 作成されるコンテキストのタイプにより、その用途が決まります。:<br><br>
<b>静的</b>コンテキストを使用して、URIをドキュメントルートの外部またはその内部にあるディレクトリにマップできます。<br>
<b> Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。<br>
<b>サーブレット</b>コンテキストは、Webアプリケーションの下にある特定のサーブレットをインポートするために使用されます。<br>
<b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。<br>
<b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。<br>
<b>プロキシ</b>コンテキストにより、このバーチャルホストは、外部のWebサーバーまたはアプリケーションサーバーへのトランスペアレントリバースプロキシサーバーとして機能します。<br>
<b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。<br>
<b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。<br>
<b>リダイレクト</b>コンテキストで内部リダイレクトURIまたは外部リダイレクトURIを設定できます。<br>
<b>Rack/Rails</b>コンテキストは、特にRack / Railsアプリケーションに使用されます。<br>
END_DESCR

EDITTIP: <b>静的</b>コンテキストを使用して、URIを文書のルートの外またはその内部のディレクトリにマップできます。
END_EDITTIP

EDITTIP: <b>Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>サーブレット</b>コンテキストは、Webアプリケーションの下で特定のサーブレットをインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。
END_EDITTIP

EDITTIP: <b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。
END_EDITTIP

EDITTIP: <b>プロキシー</b>コンテキストでは、このバーチャルホストを透過的なリバースプロキシーサーバーとして外部Webサーバーまたはアプリケーションサーバーに提供できます。
END_EDITTIP

EDITTIP: <b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。
END_EDITTIP

EDITTIP: <b>ロードバランサー</ b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストでは、内部リダイレクトURIまたは外部リダイレクトURIを設定できます。
END_EDITTIP

EDITTIP: <b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。
END_EDITTIP

[END_ITEM]



[ITEM]
ID: ctxType
NAME: コンテキストタイプ
NS: O
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: <b>静的</b>コンテキストを使用して、URIをドキュメントルートの外部またはその内部のディレクトリにマップできます。<br>
<b>Java Webアプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。<br>
<b>サーブレット</b>コンテキストは、Webアプリケーションの下にある特定のサーブレットをインポートするために使用されます。<br>
<b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。<br>
<b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。<br>
<b>プロキシー</b>コンテキストにより、このバーチャルホストは、外部のWebサーバーまたはアプリケーションサーバーへのトランスペアレントリバースプロキシサーバーとして機能します。<br>
<b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。<br>
<b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。<br>
<b>リダイレクト</b>コンテキストで内部リダイレクトURIまたは外部リダイレクトURIを設定できます。<br>
<b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。<br>
<b>モジュールハンドラー</b>コンテキストは、ハンドラー型モジュールのマウントポイントです。<br>
END_DESCR

EDITTIP: <b>静的</b>コンテキストを使用して、URIを文書のルートの外またはその内部のディレクトリにマップできます。
END_EDITTIP

EDITTIP: <b>Java Web アプリ</b>コンテキストは、AJPv13コンパイラJavaサーブレットエンジンで定義済みのJavaアプリケーションを自動的にインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>サーブレット</b>コンテキストは、Webアプリケーションの下で特定のサーブレットをインポートするために使用されます。
END_EDITTIP

EDITTIP: <b>Fast CGI</b>コンテキストは、Fast CGIアプリケーションのマウントポイントです。
END_EDITTIP

EDITTIP: <b>LiteSpeed SAPI</b>コンテキストを使用して、URIをLSAPIアプリケーションに関連付けることができます。
END_EDITTIP

EDITTIP: <b>プロキシー</b>コンテキストでは、このバーチャルホストを透過的な逆プロキシー・サーバーとして外部Webサーバーまたはアプリケーション・サーバーに使用できます。
END_EDITTIP

EDITTIP: <b>CGI</b>コンテキストを使用して、ディレクトリにCGIスクリプトのみを指定することができます。
END_EDITTIP

EDITTIP: <b>ロードバランサー</b>コンテキストを使用して、そのコンテキストに異なるクラスタを割り当てることができます。
END_EDITTIP

EDITTIP: <b>リダイレクト</b>コンテキストでは、内部リダイレクトURIまたは外部リダイレクトURIを設定できます。
END_EDITTIP

EDITTIP: <b>Rack/Rails</b>コンテキストは、特にRack/Railsアプリケーションに使用されます。
END_EDITTIP

EDITTIP: <b>モジュールハンドラ</b>コンテキストは、ハンドラタイプモジュールのマウントポイントです。
END_EDITTIP

[END_ITEM]



########## Context Definition ##########


[ITEM]
ID: uri
NAME: URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストのURIを指定します。 URIは "/"で始まる必要があります。
URIが「/」で終わる場合、このコンテキストはこのURIの下にすべてのサブURIを含みます。
END_DESCR

SYNTAX: URI
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: expuri
NAME: URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=location}

DESCR: このコンテキストのURIを指定します。 
END_DESCR

SYNTAX: URIは、プレーンURI（ "/"で始まる）またはPerl互換の正規表現URI（ "exp："で始まる）にすることができます。
プレーンURIが "/"で終わる場合、このコンテキストはこのURIの下にすべてのサブURIを含みます。
コンテキストがファイルシステム上のディレクトリにマップされている場合は、末尾に「/」を追加する必要があります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: servletEngine
NAME: サーブレットエンジン
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このWebアプリケーションを提供するサーブレットエンジンの名前を指定します。
サーブレットエンジンは、サーバーまたは仮想ホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP:サーブレットエンジンが別のマシン上で動作する場合は、webappsディレクトリのコピーをローカルに作成することをお勧めします。
それ以外の場合は、アクセス可能な一般的なネットワークドライブにファイルを配置する必要があり、パフォーマンスに影響する可能性があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: javaServletEngine
NAME: サーブレットエンジン
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このWebアプリケーションを提供するサーブレットエンジンの名前を指定します。
サーブレットエンジンは、サーバーまたは仮想ホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: サーブレットエンジンが別のマシン上で動作する場合は、webappsディレクトリのコピーをローカルに作成することをお勧めします。
それ以外の場合は、アクセス可能な一般的なネットワークドライブにファイルを配置する必要があり、パフォーマンスに影響する可能性があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: fcgiapp
NAME: FastCGI アプリ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: FastCGIアプリケーションの名前を指定します。
このアプリケーションは、サーバーまたは仮想ホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: Fast CGIコンテキストは、Fast CGIアプリケーションのマウントポイントです。
Fast CGIアプリケーションは、サーバーレベルまたはバーチャルホストレベルであらかじめ定義されている必要があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: lsapiapp
NAME: LiteSpeed SAPIアプリ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストに接続するLiteSpeed SAPIアプリケーションの名前を指定します。
このアプリケーションは、サーバーまたはバーチャルホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: lbapp
NAME: ロードバランサー
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストに関連付けるロードバランサの名前を指定します。
このロードバランサは仮想アプリケーションであり、サーバーまたは仮想ホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extCluster
NAME: クラスタ
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストへの要求を処理するクラスタを指定します。 
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: proxyWebServer
NAME: Webサーバー
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 外部Webサーバーの名前を指定します。
この外部Webサーバーは、サーバーまたは仮想ホストレベルの{PAGE=ExtApp_Help}セクションで定義する必要があります。
END_DESCR

EDITTIP: プロキシコンテキストは、この仮想ホストを透過的なリバースプロキシサーバとして機能させ、外部のWebサーバまたはアプリケーションサーバに提供します。
END_EDITTIP

EDITTIP: 外部Webサーバーは、サーバーまたは仮想ホストレベルで外部アプリケーションの下にあらかじめ定義されている必要があります。
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: location
NAME: ロケーション
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=expuri}

DESCR: ファイルシステム内のこのコンテキストの対応する場所を指定します。 
END_DESCR

SYNTAX: $SERVER_ROOT、$VH_ROOT、または$DOC_ROOTに関連する絶対パスまたは絶対パスにすることができます。
$DOC_ROOTはデフォルトの相対パスであり省略することができます。


{ITEM=expuri}が正規表現であれば、一致した部分文字列を使用して "Root"文字列を形成することができます。
一致した部分文字列は、値 "$1" - "$9"で参照できます。
一致した文字列全体を参照するには、 "$0"と "＆"を使用できます。
さらに、クエリ文字列は、 "？" その後にクエリ文字列が続きます。
注意してください。 "＆"はクエリ文字列で "\＆"としてエスケープする必要があります。
END_SYNTAX

EXAMPLE: {ITEM=location}を{val}/home/john/web_examples{/}に設定した{val}/examples/{/}のような単純なURIは、リクエスト "/examples/foo/bar.html"をファイル "/home/john/web_examples/foo/bar.html"をマップします。

Apacheのmod_userdirをシミュレートするには、URIを{val}exp：^ /〜（[A-Za-z0-9] +）（。*）{/}に設定し、{ITEM=location}を{val}/home/$1/public_html$2{/}に設定します。
これらの設定で、URI /~john/foo/bar.html のリクエストが/home/john/public_html/foo/bar.htmlにマップします。
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rails_location
NAME: ロケーション
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=expuri}

DESCR: ファイルシステム内のこのコンテキストの対応する場所を指定します。
END_DESCR

EDITTIP: Rack/Railsコンテキストは、Rack/Railsアプリケーションを簡単に設定するためのコンテキストです。
[Location]フィールドには、Rack/Railsアプリケーションのルートロケーションを指定するだけで済みます。
END_EDITTIP

SYNTAX: $SERVER_ROOT、$VH_ROOT、または$DOC_ROOTに関連する絶対パスまたは相対パスにすることができます。
$DOC_ROOTはデフォルトの相対パスであり省略することができます。


If the {ITEM=expuri} is a regular expression, then the matched sub-string 
can be used to form the "Root" string. The matched sub-string can be 
referenced with the values "$1" - "$9". "$0" and "&" can be used to reference the 
whole matched string. Additionally, a query string can be set by 
appending a "?" followed by the query string. Be careful. "&" should
be escaped as "\&" in the query string.
END_SYNTAX

EXAMPLE:  A plain URI like {val}/examples/{/} with {ITEM=location} 
set to {val}/home/john/web_examples{/} will map the request "/examples/foo/bar.html" 
to file "/home/john/web_examples/foo/bar.html". 

To simulate Apache's mod_userdir, 
set URI to {val}exp: ^/~([A-Za-z0-9]+)(.*){/}, 
set {ITEM=location} to {val}/home/$1/public_html$2{/}. With these settings, a request of URI /~john/foo/bar.html will 
map to file /home/john/public_html/foo/bar.html.
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: javaWebApp_location
NAME: Location
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the directory that contains the files for this web application. 
This is the directory containing "WEB-INF/web.xml".
END_DESCR

EDITTIP: Java web app context is used to automatically import a predefined Java Application in an AJPv13 compilant Java servlet engine, the 
servlet engine should be set up in external app section (either server or virtual host level). 
END_EDITTIP

EDITTIP: Location is the directory that contains web application files, which includes WEB-INF/ sub directory.
END_EDITTIP

EDITTIP: The web server will automatically import configuration file of web application, which usually is WEB-INF/web.xml under the driectory specified by "location".
END_EDITTIP

SYNTAX: パス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: cgi_path
NAME: Path
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the location of CGI scripts. 
END_DESCR

EDITTIP: A CGI context can be used to specify a directory only contains CGI scripts. Path can be absolute path or relative to $SERVER_ROOT, $VH_ROOT 
or $DOC_ROOT(default). Path and URI must be ended with "/" for a cgi-bin directory.
END_EDITTIP

EDITTIP: If only a specific script is needed in that directory, it is recommended to create a CGI context for that script only. In this case, path and 
URI need not be a directory. For e.g., path can be ~/myapp/myscript.pl, URI can be /myapp/myscript.pl. All other files will not be served as CGI.
END_EDITTIP

SYNTAX: The path can be a directory that contains a group of CGI scripts, 
like {val}$VH_ROOT/myapp/cgi-bin/{/}. 
In this case, the context {ITEM=expuri} must end with "/", like {val}/app1/cgi/{/}.  
The Path can also specify only one CGI script, like {val}$VH_ROOT/myapp/myscript.pl{/}. 
This script should have the corresponding {ITEM=expuri} {val}/myapp/myscript.pl{/}.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowBrowse
NAME: アクセス可能
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: このコンテキストにアクセスできるかどうかを指定します。
アクセスを拒否するには{val}いいえ{/}に設定してください。
この機能を使用して、指定したディレクトリが訪問されないように保護できます。
このコンテキストのコンテンツを更新している場合、またはこのディレクトリに特別なデータがある場合に使用することができます。
END_DESCR

EDITTIP: 静的コンテキストを使用して、URIをドキュメントルートの外部またはその内部のディレクトリにマップできます。
ディレクトリは、ドキュメントルート（デフォルト）、$VH_ROOTまたは$SERVER_ROOTの絶対パスまたは相対パスにすることができます。
END_EDITTIP

EDITTIP: 「アクセス可能」をチェックすると、このコンテキストで静的ファイルをブラウズできます。
静的ファイルを表示しないように無効にすることができます。
例えば コンテンツを更新するとき。
END_EDITTIP

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowSetUID
NAME: UIDの設定を許可する
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 設定されたUIDビットがCGIスクリプトに許可されるかどうかを指定します。
設定されたUIDビットが許可され、CGIスクリプトに対して設定されたUIDビットが有効になっている場合、CGIスクリプトがどのユーザーに代わって起動されたかにかかわらず、CGIプロセスのユーザーIDは、CGIスクリプトの所有者のユーザーIDに切り替わります。

デフォルトは「オフ」です。
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [セキュリティ]可能であれば、UID CGIスクリプトを設定しないでください。
本質的にセキュリティリスクです。
END_TIPS

[END_ITEM]



[ITEM]
ID: externalredirect
NAME: 外部リダイレクト
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether this redirect is external. 
For external redirection, {ITEM=statuscode} may be specified and 
{ITEM=destinationuri} can start either with "/" or "http(s)://". 
For internal redirection, {ITEM=destinationuri} must start with "/".
END_DESCR

EDITTIP: Set up redirect URI here. If it is an external redirect, you can specify the status code. Internal 
redirect has to start with "/", external redirect can either start with "/" or with "http(s)://".
END_EDITTIP

SYNTAX: 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: statuscode
NAME: ステータスコード
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: 外部リダイレクトの応答ステータスコードを指定します。
ステータスコードが300〜399の場合、{ITEM=destinationuri}を指定できます。
END_DESCR

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: destinationuri
NAME: Destination URI
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the target location of the redirect. 
If this redirected URI maps to a URI in another redirect context, it will be redirected again. 
END_DESCR

SYNTAX: This URI can either be a relative URI on the same web site starting with "/", 
or an absolute URI pointing to different web site starting with "http(s)://".  
If the {ITEM=expuri} contains regular expressions, the destination can reference 
the matched variables, such as $1 or $2.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extraHeaders
NAME: Extra Headers
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies extra response headers to be added. Multiple headers can be added, one header per line.
Put "NONE" to disable headers inherited from parent content.
END_DESCR

SYNTAX: "[HeaderName]: [HeaderValue]" in each line.
END_SYNTAX

EXAMPLE: 
Cache-control: no-cache, no-store 

My-header: Custom header value
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: allowOverrideContext
NAME: Allow Override
NS: E
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies what directives in an access control file are allowed. 
An access control file can be placed in a directory to control the accessibility 
of files under that directory. 

<ul>
	<li>When nothing is checked, inherited default settings will be
	used. </li>
	<li>When {val}None{/} is checked, access control files will be
	ignored.
	</li>
	<li>When {val}Limit{/} is checked, directives "Order",
	"Allow from" and "Deny from" are allowed. </li>
	<li>When {val}Auth{/} is checked, directives
	"AuthGroupFile",  "AuthName", "AuthType", 
	"AuthUserFile", and "Require" are allowed.</li>
	<li>When {val}FileInfo{/} is checked, directives
	"Satisfy", "AddDefaultCharset", "AddType",
	"DefaultType", "ForceType", "ExpiresActive", "ExpiresDefault",
	"ExpiresByType", "Redirect", "RedirectTemp", "RedirectPermanent",
	"RewriteEngine", "RewriteOptions", "RewriteBase", "RewriteCond"
	and "RewriteRule" are allowed</li>
	<li>When {val}Indexes{/} is checked, directive
	"DirectoryIndex" is allowed</li>
	<li>When {val}Options{/} is checked, directive
	"Options" is allowed</li>
</ul>

Allow Override configuration is available at three levels: server, 
virtual host and context. If a configuration is not checked at the server level, 
the controlled directives will be disabled for the whole server whether or not 
it is enabled at lower levels. If something is enabled at the server level, virtual hosts will 
inherit same settings by default. Similarly context level settings will be inherited from virtual host settings. 
Lower levels can disable a setting that is enabled at an upper level, but cannot 
enable a setting that is disabled at an upper level.
END_DESCR

EDITTIP: Allow Override will be effective only if server/vhost level setting is enabled. Context will inherit virtual host settings by 
default when nothing is checked. When nothing but "None" is checked, access control file will be ignored. When "Access Control" is checked, 
directives "Order", "Allow" and "Deny" are allowed. When "Authentication" is checked, directives "AuthGroupFile", "AuthName", "AuthType", "AuthUserFile", 
"Require" are allowed.
END_EDITTIP

SYNTAX: チェックボックス
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [Performance] If there is no need for directory level
configuration customization, check {val}None{/}.
END_TIPS

[END_ITEM]



[ITEM]
ID: addMIMEType
NAME: MIME Type
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies additional MIME types and mappings for this
	   context. New mappings will override existing mappings under this
	   context and its children contexts.

	   If you want to show PHP scripts as text files instead of being
	   executed as scripts, just override the .php mapping to MIME type
	   "text/plain". 
END_DESCR

SYNTAX: MIME-type1 extension extension ..., MIME-type2 extension ...
		Use comma to separate between MIME types, use space to
		separate multiple extensions.
END_SYNTAX

EXAMPLE: {val}image/jpg jpeg jpg, image/gif gif{/}
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: mimetype
NAME: MIME Type
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: A MIME type consists of a type and subtype in the format of "type/subtype". 
END_DESCR

SYNTAX: 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: forceType
NAME: Force MIME Type
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: When specified, all files under this context will be served as
	   static files with the MIME type specified regardless of file suffix. 
	   When set to {val}NONE{/}, inherited force type setting will be
	   disabled.
END_DESCR

SYNTAX: MIME type or NONE.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: defaultType
NAME: Default MIME Type
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: When specified, this type will be used when MIME type mapping
	   cannot be determined by the suffix of a document or if there is no suffix.
	   If not specified, the default value 
	   {val}application/octet-stream{/} will be used.
END_DESCR

SYNTAX: MIME-type
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: realm
NAME: Realm
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the authorization realm for this context. When specified, 
a valid username and password must be provided in order to access this context. 
{TBL=VHSecurity_Help#realms} are set up in the {PAGE=VHSecurity_Help} section. 
This setting uses each realm's {ITEM=VHSecurity_Help#realmName}.
END_DESCR

EDITTIP: A Context can be protected with a predefined realm, which is set up in the virtual host security section. Optionally, an alternative name and 
additional requirements can be specified.
END_EDITTIP

SYNTAX: 選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: authName
NAME: Authentication Name
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies an alternative name for the authorization realm for the current context. 
If not specified, the original realm name will be used. The authentication name is 
displayed on the browser's login pop-up.
END_DESCR

SYNTAX: text
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: required
NAME: Require (Authorized Users/Groups)
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies which user/group can access this context. This allows you to use 
one user/group database (specified in {ITEM=realm}) across a number of contexts, but 
only allow certain users/groups from that database to access this context.
END_DESCR

SYNTAX: Syntax is compatible with Apache's Require directive. For example: 
<ul>
<li>{val}user username [username ...]{/} 

Only listed users can access this context.</li>
<li> {val}group groupid [groupid ...]{/}

Only users belonging to the listed groups can access this context.</li>
</ul>
If this setting is not specified, all valid users will be allowed to access this resource.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: accessAllowed
NAME: Access Allowed
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies which IPs or sub-networks are allowed to access resources under this context. Together with 
{ITEM=accessDenied} and server/virtual host level access control, accessibility is determined by 
the smallest scope that a client's IP address falls into. 
END_DESCR

SYNTAX: Comma-delimited list of IPs/sub-networks. 
END_SYNTAX

EXAMPLE: Sub-networks can be written as {val}192.168.1.0/255.255.255.0{/}, {val}192.168.1{/}, or {val}192.168.1.*{/}.
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: accessDenied
NAME: Access Denied
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies which IPs or sub-networks are NOT allowed to access resources under this context. 
Together with {ITEM=accessAllowed} and server/virtual host-level access control, accessibility is 
determined by the smallest scope that a client's IP address falls into. 
END_DESCR

SYNTAX: Comma-delimited list of IPs/sub-networks. 
END_SYNTAX

EXAMPLE: Sub-networks can be written as {val}192.168.1.0/255.255.255.0{/}, {val}192.168.1{/}, or {val}192.168.1.*{/}.
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: extAuthorizer
NAME: Authorizer
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies an external application that can be used to
generate authorized/unauthorized decisions. Currently, only the FastCGI
Authorizer is available. For more details about the FastCGI Authorizer role, 
please visit {ext-href}http://www.fastcgi.com{ext-href-end}http://www.fastcgi.com{ext-href-end-a}.
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rewriteInherit
NAME: Rewrite Inherit
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to inherit rewrite rules from parent
contexts. If rewrite is enabled and not inherited, rewrite base and
rewrite rules defined in this context will be used.
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: rewriteBase
NAME: Rewrite Base
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the base URL for rewrite rules.
END_DESCR

SYNTAX: URL
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: addDefaultCharset
NAME: Add Default Charset
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to add a character set tag to the
	   "Content-Type" response header, when content type is either
	   "text/html" or "text/plain" without any parameters.
	   When set to {val}Off{/},  this function is disabled. When set to
	   {val}On{/}, either the character set specified by
	   {ITEM=defaultCharsetCustomized} or the default "iso-8859-1" will be added.
END_DESCR

SYNTAX: ラジオボックスから選択
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: defaultCharsetCustomized
NAME: Customized Default Charset
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies a character set to be used when {ITEM=addDefaultCharset}
	   is {val}On{/}. This is optional. The default value is {val}iso-8859-1{/}.
	   This entry has no effect when {ITEM=addDefaultCharset} is
	   {val}Off{/}.
END_DESCR

SYNTAX: Name of a character set.
END_SYNTAX

EXAMPLE: utf-8
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: moduleNameSel
NAME: Module
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Name of the module. The module must be registered under the Server Module Configuration tab.  
Once it is registered, the module name will be available in the drop down box for the Listener and Virtual Host configurations.
END_DESCR

SYNTAX: ドロップダウンリストから選択
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



############# Tables #############


[TBL]
ID: newContext
NAME: Context Attributes

[END_TBL]



[TBL]
ID: generalContext
NAME: Static Context
NS: E

DESCR: Context settings are used to specify special settings for files in a 
certain location. These settings can be used to bring in files outside of 
the document root (like Apache's Alias or AliasMatch directives), 
to protect a particular directory using authorization realms, or to 
block or restrict access to a particular directory within the document root.
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: generalContext
NAME: 静的コンテキスト
NS: O

DESCR: コンテキスト設定は、特定の場所にあるファイルの特別な設定を指定するために使用されます。
これらの設定は、ApacheのAliasやAliasMatchディレクティブのようなドキュメントルートの外部にファイルを持ち込み、認可領域を使用して特定のディレクトリを保護したり、ドキュメントルート内の特定のディレクトリへのアクセスをブロックまたは制限するために使用できます。

SEE_ALSO: 
[END_TBL]



[TBL]
ID: javaWebAppContext
NAME: Java Web App Context
NS: E

DESCR: Many people running Java applications use the servlet engine to serve static 
content as well. But no servlet engine is nearly as efficient as LiteSpeed Web Server for these processes. In order to improve the overall performance, 
LiteSpeed Web Server can be configured as a gateway server, which serves static content 
and forwards dynamic Java page requests to the servlet engine. 


LiteSpeed Web Server requires certain contexts to be defined in order to run a 
Java application. A Java Web App Context automatically creates all required 
contexts based on the Java web application's configuration file (WEB-INF/web.xml). 


There are a few points you need to keep in mind when setting up a Java Web App Context:

<ul>
<li>A {val}Servlet Engine{/} external application must be set up in {PAGE=ExtApp_Help} 
before Java Web App Context can be set up.<li> 
<li>A {PAGE=ScriptHandler_Help} for .jsp files should be defined as well.</li>
<li>If the web application is packed into a .war file, the .war file must be expanded. 
The server cannot access compressed archive files.</li>
<li>For the same resources, the same URL should be used no matter whether it is accessed 
through LiteSpeed Web Server or through the servlet engine's built-in HTTP server.


For example, 
  Tomcat 4.1 is installed under /opt/tomcat. Files for the "examples" web application are 
  located at /opt/tomcat/webapps/examples/. Through Tomcat's built-in HTTP server, 
  the "examples" web application is thus accessed with a URI like "/examples/***". 
  The corresponding Java Web App Context should thus be configured: 
  {ITEM=expuri} = {val}/examples/{/}, {ITEM=location} = {val}/opt/tomcat/webapps/examples/{/}.</li>
  </ul>
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: javaWebAppContext
NAME: Java Webアプリコンテキスト
NS: O

DESCR: Many people running Java applications use the servlet engine to serve static 
content as well. But no servlet engine is nearly as efficient as LiteSpeed Web Server 
for these processes. In order to improve the overall performance, 
LiteSpeed Web Server can be configured as a gateway server, which serves static content 
and forwards dynamic Java page requests to the servlet engine. 


LiteSpeed Web Server requires certain contexts to be defined in order to run a 
Java application. A Java Web App Context automatically creates all required 
contexts based on the Java web application's configuration file (WEB-INF/web.xml). 


There are a few points you need to keep in mind when setting up a Java Web App Context:

<ul>
<li>A {val}Servlet Engine{/} external application must be set up in {PAGE=ExtApp_Help} 
before Java Web App Context can be set up.</li> 
<li>A {PAGE=ScriptHandler_Help} for .jsp files should be defined as well.</li>
<li>If the web application is packed into a .war file, the .war file must be expanded. 
The server cannot access compressed archive files.</li>
<li>For the same resources, the same URL should be used no matter whether it is accessed 
through LiteSpeed Web Server or through the servlet engine's built-in HTTP server.

For example, 
  Tomcat 4.1 is installed under /opt/tomcat. Files for the "examples" web application are 
  located at /opt/tomcat/webapps/examples/. Through Tomcat's built-in HTTP server, 
  the "examples" web application is thus accessed with a URI like "/examples/***". 
  The corresponding Java Web App Context should thus be configured: 
  {ITEM=expuri} = {val}/examples/{/}, {ITEM=javaWebApp_location} = {val}/opt/tomcat/webapps/examples/{/}.</li>
  </ul>
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: servletContext
NAME: Servlet Context
NS: E

DESCR: Servlets can be imported individually through Servlet Contexts. 
A Servlet Context just specifies the URI for the servlet and the name of the servlet engine. 
You only need to use this when you do not want to import the whole web application 
or you want to protect different servlets with different authorization realms. 
This URI has the same requirements as for a {TBL=javaWebAppContext}. 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: servletContext
NAME: サーブレットコンテキスト
NS: O

DESCR: サーブレットは、サーブレットコンテキストを介して個別にインポートできます。
サーブレットコンテキストは、サーブレットのURIとサーブレットエンジンの名前を指定するだけです。
Webアプリケーション全体をインポートしたくない場合や、異なるサーブレットを異なる認可レルムで保護したい場合にのみ、これを使用する必要があります。
このURIには、{TBL=javaWebAppContext}と同じ要件があります。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: fcgiContext
NAME: FastCGI Context
NS: E

DESCR: FastCGI applications cannot be used directly. A FastCGI application must be either configured as 
a script handler or mapped to a URL through FastCGI context. A FastCGI context will 
associate a URI with a FastCGI application. 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: fcgiContext
NAME: FastCGIコンテキスト
NS: O

DESCR: FastCGIアプリケーションは直接使用することはできません。
FastCGIアプリケーションは、スクリプトハンドラとして構成するか、FastCGIコンテキストを介してURLにマップする必要があります。
FastCGIコンテキストは、URIをFastCGIアプリケーションに関連付けます。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lsapiContext
NAME: LiteSpeed SAPI Context
NS: E

DESCR: External applications cannot be used directly. They must be either configured as 
a script handler or mapped to a URL through a context. An LiteSpeed SAPI Context will 
associate a URI with an LSAPI (LiteSpeed Server Application Programming Interface) application.
Currently PHP, Ruby and Python have LSAPI modules. LSAPI, as it is developed specifically for
LiteSpeed web server, is the most efficient way to communicate with LiteSpeed web server.  
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lsapiContext
NAME: LiteSpeed SAPIコンテキスト
NS: O

DESCR: 外部アプリケーションは直接使用することはできません。
スクリプトハンドラとして設定するか、コンテキストを介してURLにマップする必要があります。
LiteSpeed SAPIコンテキストは、URIをLSAPI（LiteSpeed Server Application Programming Interface）アプリケーションに関連付けます。
現在PHP、Ruby、PythonにはLSAPIモジュールがあります。
LiteSpeed Webサーバー用に特別に開発されたLSAPIは、LiteSpeed Webサーバーと通信するための最も効率的な方法です。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: proxyContext
NAME: Proxy Context
NS: E

DESCR: A Proxy Context enables this virtual host as a transparent reverse
proxy server. This proxy server can run in front of any web 
servers or application servers that support HTTP protocol. The External
web server that this virtual host proxies for  has to be defined in {PAGE=ExtApp_Help} 
before you can set up a Proxy Context.
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: proxyContext
NAME: プロキシコンテキスト
NS: O

DESCR: プロキシコンテキストは、この仮想ホストを透過的なリバースプロキシサーバとして有効にします。
このプロキシサーバーは、HTTPプロトコルをサポートするWebサーバーまたはアプリケーションサーバーの前で実行できます。
この仮想ホストがプロキシする外部Webサーバーは、プロキシコンテキストを設定する前に{PAGE=ExtApp_Help}で定義されている必要があります。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: cgiContext
NAME: CGI Context
NS: E

DESCR: A CGI context defines scripts in a particular directory as CGI scripts. 
This directory can be inside or outside of the document root. 
When a file under this directory is requested, the server will always 
try to execute it as a CGI script, no matter if it's executable or not. 
In this way, file content under a CGI Context is always protected and cannot 
be read as static content. It is recommended that you put all your CGI 
scripts in a directory and set up a CGI Context to access them. 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: cgiContext
NAME: CGIコンテキスト
NS: O

DESCR: CGIコンテキストは、特定のディレクトリ内のスクリプトをCGIスクリプトとして定義します。
このディレクトリは、ドキュメントルートの内側または外側にすることができます。
このディレクトリの下にあるファイルが要求されると、サーバは実行可能かどうかに関わらず、常にCGIスクリプトとして実行しようとします。
このように、CGIコンテキスト下のファイルの内容は常に保護されており、静的なコンテンツとして読み込むことができません。
すべてのCGIスクリプトをディレクトリに置いて、それらにアクセスするためのCGIコンテキストを設定することをお勧めします。 
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: loadBalancerContext
NAME: Load Balancer Context
NS: L

DESCR: A Load Balancer Context can be used to forward one URI or a group of URIs to another location. 
The destination URI can be either on the same web site or an absolute URI pointing to another web site.
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: lbContext
NAME: Load Balancer Context
NS: E

DESCR: Like other external applications, load balancer worker applications 
cannot be used directly. They must be mapped to a URL through a context. 
A Load Balancer Context will associate a URI to be load balanced by the load balancer workers. 
END_DESCR


SEE_ALSO: 
[END_TBL]



[TBL]
ID: lbContext
NAME: ロードバランサコンテキスト
NS: O

DESCR: 他の外部アプリケーションと同様に、ロードバランサワーカーアプリケーションは直接使用できません。
それらは、コンテキストを介してURLにマップされなければなりません。
ロードバランサコンテキストは、ロードバランサワーカーによって負荷分散されるURIを関連付けます。 
END_DESCR


SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: L

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: E

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: redirectContext
NAME: リダイレクトコンテキスト
NS: O

DESCR: リダイレクトコンテキストは、1つのURIまたはURIのグループを別の場所に転送するために使用できます。
宛先URIは、同じWebサイト（内部リダイレクト）または別のWebサイトを指す絶対URI（外部リダイレクト）のいずれかにすることができます。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsContext
NAME: Rack/Railsコンテキスト
NS: E

DESCR: Rack/Railsコンテキストは、Ruby Rack/Railsアプリケーションを簡単に設定する方法を提供します。
Rack/RailsアプリケーションをRack/Railsコンテキストに追加するには、URLとアプリケーションのルートディレクトリのみをマウントする必要があります。
外部アプリケーションを定義したり、404ハンドラを追加したり、ルールを書き直すなど、すべての問題を解決する必要はありません。
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsContext
NAME: Rack/Railsコンテキスト
NS: O

DESCR: Rack/Railsコンテキストは、Ruby Rack/Railsアプリケーションを簡単に設定する方法を提供します。
Rack/RailsアプリケーションをRack/Railsコンテキストに追加するには、URLとアプリケーションのルートディレクトリのみをマウントする必要があります。
外部アプリケーションを定義したり、404ハンドラを追加したり、ルールを書き直すなど、すべての問題を解決する必要はありませ
END_DESCR

SEE_ALSO: 
[END_TBL]



[TBL]
ID: moduleContext
NAME: モジュールハンドラコンテキスト

DESCR: モジュールハンドラコンテキストは、登録されたモジュールにURIを関連付けます。
モジュールは[サーバーモジュールの構成]タブに登録する必要があります。
END_DESCR

SEE_ALSO: 
[END_TBL]



################ Pages ################


[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: L

DESCR: コンテキストとは、共通の親URLを持つURLを使用して検索できるリソースのセットです。
共通の親URLは、コンテキストのIDです。
Webサイトはコンテキストで構成されています。たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。 "/cgi-bin/"はCGIアプリケーション専用のコンテキストです。
ウェブサイトをURLツリーと考えると、すべてのブランチは、分岐ノードのURLで識別できるコンテキストです。
コンテキストは、次の目的のために明示的に定義する必要があります。:
<ul>
  <li>デフォルト以外のクラスタを使用する場合</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]


[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: E

DESCR: LiteSpeed Web Serverの用語では、「コンテキスト」とは仮想リソースであり、共通の親URLであり、リソースのグループを識別します。
コンテキストは、Webサイトのディレクトリツリー内の異なるディレクトリと考えることができます。
たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。
"/cgi-bin/"は、このサイトのCGIアプリケーション専用のツリー上の文脈です。
コンテキストは、次の目的でLiteSpeedのWebAdminコンソールで明示的に定義することができます。:

<ul>
  <li>ドキュメントルートの外部にあるファイルシステムにアクセス可能にする。</li>
  <li>特定のリソースへのアクセスをブロックする。</li>
  <li>特定のリソースに対してユーザーレベルの認証を設定する。</li>
  <li>外部アプリケーションのマウントポイントを作成する。</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: Context_Help 
NAME: コンテキスト
NS: O

DESCR: LiteSpeed Web Serverの用語では、「コンテキスト」とは仮想リソースであり、共通の親URLであり、リソースのグループを識別します。
コンテキストは、Webサイトのディレクトリツリー内の異なるディレクトリと考えることができます。
たとえば、「/」はWebサイトのドキュメントルートにマップされたルートコンテキストです。
"/cgi-bin/"は、このサイトのCGIアプリケーション専用のツリー上の文脈です。
コンテキストは、次の目的でLiteSpeedのWebAdminコンソールで明示的に定義することができます。:

<ul>
  <li>ドキュメントルートの外部にあるファイルシステムにアクセス可能にする。</li>
  <li>特定のリソースへのアクセスをブロックする。</li>
  <li>特定のリソースに対してユーザーレベルの認証を設定する。</li>
  <li>外部アプリケーションのマウントポイントを作成する。</li>
  <li>要求を別の場所にリダイレクトする。</li>
</ul>
END_DESCR

SEE_ALSO: 
[END_PAGE]


[PAGE]
ID: Static_Context
NAME: 静的コンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Java_Web_App_Context 
NAME: Java Web アプリコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Servlet_Context 
NAME: サーブレットコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: FCGI_Context
NAME: Fast CGIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: LSAPI_Context 
NAME: LiteSpeed SAPIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Proxy_Context 
NAME: プロキシコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: CGI_Context 
NAME: CGIコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: LB_Context 
NAME: ロードバランサコンテキスト
NS: L

DESCR:
END_DESCR

[END_PAGE]loadBalancerContext



[PAGE]
ID: LB_Context 
NAME: ロードバランサコンテキスト
NS: EO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Redirect_Context 
NAME: リダイレクトコンテキスト
NS: LEO

DESCR:
END_DESCR

[END_PAGE]



[PAGE]
ID: Rails_Context 
NAME: Rack/Railsコンテキスト
NS:EO

DESCR:
END_DESCR

[END_PAGE]


[PAGE]
ID: Module_Context 
NAME: モジュールハンドラコンテキスト
NS: O

DESCR:
END_DESCR

[END_PAGE]


[END_HELPDOC]
