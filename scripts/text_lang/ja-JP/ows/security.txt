<h1>セキュリティ</h1>

<p>LiteSpeed Web Serverは、セキュリティを最優先事項として設計されています。
LSWSはSSLをサポートし、サーバおよび仮想ホストレベルでのアクセス制御、コンテキスト固有の領域保護を備えています。
これらの標準機能に加えて、LSWSには次の特別なセキュリティ機能もあります： </p>

<ol>
	<li><h3>接続レベルの制限：</h3>
	  <ul>
	    <li>IPレベルのスロットリングにより、接続数に関係なく、単一のIPアドレスとの間でネットワーク帯域幅が制限されます。</li>
	    <li> IPレベルの接続アカウンティングは、単一のIPアドレスからの同時接続数を制限します。
WebAdminコンソールで、接続のソフト制限、接続ハード制限、猶予期間、および禁止期間設定を使用してこれを制御できます。 </li>
	  </ul>
	</li>
	<li><h3>リクエストのチェック：</h3>
	  	<p> Every HTTP request is vetted by LiteSpeed Web Server. "/." is not allowed in
	    a decoded URL, thus denying accessing hidden files and parent directories.</p>
	    <p>Request size is limited by LiteSpeed Web Server's max request URL length, 
	    max request header length, and max request body length settings. </p>
    </li>
	<li><h3>静的ファイルのチェック：</h3>
  		<p>LiteSpeed Web Server will serve a static file only if the following conditions 
    are satisfied: </p>
	  <ul>
	    <li>The file is readable by everyone.</li>
	    <li>The file is not executable.</li>
	    <li>The file is not in the access denied directory list.</li>
	    <li>The file does not contain symbolic link if symbolic links are not allowed. </li>
	    <li>By default, LiteSpeed Web Server does not index a directory by listing its
	        files, it has to be enabled explicitly.</li>
	  </ul>
	</li>
	<li><h3>外部アプリケーションファイアウォール：</h3>
		<p>LiteSpeed Web Server forwards requests to external applications to process/generate 
dynamic content. Those applications can use a lot of system resources. The performance of the 
whole system will be severely degraded when system resource consumption reaches a certain point 
-- when swapping space has to be used, for example. One way to conduct a DoS attack is to flood 
the web server with concurrent requests to a cumbersome external application.</p>
<p>LiteSpeed Web Server can pipeline requests and control the concurrent level of external 
application use to prevent overconsumption of system resources. LSWS caches requests and only 
forwards completed requests to the external application. This means the external application 
will not be held waiting while the server is receiving the request. LSWS also caches the 
external application's response so that the external application can be released as soon as 
the response is completed and does not have to wait for the client to receive the complete response. 
This way the server can utilize fewer external application instances to serve more concurrent 
requests and achieve higher performance and scalability. LiteSpeed Web Server also uses its 
own virtual memory to cache the request and response body to minimize the usage of system 
memory without sacrificing performance. </p></li>
  <li><h3>CGI resources consumption limit:</h3>
<p>LiteSpeed Web Server restricts the amount of system resources that can be consumed by
 CGI applications. For each request to a CGI script, the web server needs to
 start a standalone CGI process to handle it. On a Unix system, the number of concurrent 
 processes is limited. With the CGI resources consumption limit, you can configure 
 the maximum number of concurrent CGI instances that the web server can launch.  
Excessive concurrent processes will degrade the performance 
of the whole system. (CGI processes are a common weapon for DoS attacks.)
A system process limit can be specified per user in order to control the number
of processes that can be spawned by a CGI application. Each process is further confined by CPU and memory limits.</p>
</li>
  <li><h3>Enhanced CGI/FastCGI security with suEXEC:</h3>
<p>In order to reduce the security risks of a CGI or Fast CGI script, LiteSpeed Web Server can restrict the system resources the CGI script can access by running it in "suEXEC" mode. 
"suEXEC" starts the CGI or Fast CGI script with a different user ID from that of the web server. This greatly improves security in
shared hosting environment by preventing one user's CGI script from accessing other users' files.</p>
</li>
</ol>
