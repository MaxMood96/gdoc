[HELPDOC]


########## Server Module Definition ##########


[ITEM]
ID: modulename
NAME: モジュール
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: モジュールの名前。
モジュール名はモジュールファイル名と同じになります。
モジュール・ファイルは、サーバー・アプリケーションによってロードされるために$SERVER_ROOT/modules/modulename.soの下になければなりません。
サーバーは起動時に登録されたモジュールをロードします。
このためには、新しいモジュールが登録された後でサーバーを再起動する必要があります。

END_DESCR

SYNTAX: .soのライブラリ名。 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: internalmodule
NAME: 内部
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: モジュールが外部の.soライブラリではなく、静的にリンクされている内部モジュールであるかどうかを指定します。

END_DESCR

SYNTAX: bool 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: modParams
NAME: モジュールのパラメータ
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: モジュールのパラメータを設定します。 モジュールパラメータは、モジュール開発者によって定義されます。


デフォルト値をグローバルに割り当てるようにサーバー構成内の値を設定します。
ユーザーは、この設定をリスナー、仮想ホストまたはコンテキスト・レベルでオーバーライドできます。
「設定しない」ラジオボタンが選択されている場合、それは上位レベルから継承されます。
END_DESCR

SYNTAX: モジュールインタフェースで指定されます。 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: moduleEnabled
NAME: フックを有効にする
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: モジュールフックをグローバルに有効または無効にします。 

「設定しない」ラジオボタンが選択され、モジュールにフック機能が含まれている場合、デフォルトが有効になります。
ユーザーは、各レベルでこのグローバル設定を上書きできます。  
END_DESCR

SYNTAX: bool 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: moduleEnabled_lst
NAME: フックを有効にする
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Listenerレベルでモジュールフックを有効または無効にします。
モジュールにTCP/IPレベルのフック（L4_BEGSESSION、L4_ENDSESSION、L4_RECVING、L4_SENDING）がある場合のみ、この設定が有効になります。


「設定しない」ラジオボタンが選択されている場合、デフォルトはServer設定から継承されます。
ユーザーはデフォルト設定を上書きするためにここで設定するだけです。 
END_DESCR

SYNTAX: bool 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: moduleEnabled_vh
NAME: フックを有効にする
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: 仮想ホストまたはコンテキスト・レベルでモジュール・フックを使用可能または使用不可にします。
モジュールにHTTPレベルのフックがある場合のみ、この設定が有効になります。


「設定しない」ラジオボタンを選択すると、仮想ホストレベルのデフォルト設定がサーバー設定から継承されます。
コンテキストレベルの設定は、仮想ホストレベルから継承されます。
ユーザーはデフォルト設定を上書きするためにここで設定するだけです。 
END_DESCR

SYNTAX: bool 
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: L4_BEGINSESSION
NAME: フック::L4_BEGINSESSION プライオリティ
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the L4 Begin Session Hook.

 
The L4 Begin Session Hook is triggered when the TCP/IP connection begins.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: L4_ENDSESSION
NAME: フック::L4_ENDSESSION プライオリティ
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the L4 End Session Hook.

  
The L4 End Session Hook is triggered when the TCP/IP connection ends.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: L4_RECVING
NAME: Hook::L4_RECVING Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the L4 Receiving Hook.

  
The L4 Receiving Hook is triggered when the TCP/IP connection receives data.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: L4_SENDING
NAME: Hook::L4_SENDING Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the L4 Sending Hook.

 
The L4 Sending Hook is triggered when the TCP/IP connection sends data.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: HTTP_BEGIN
NAME: Hook::HTTP_BEGIN Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Begin Hook.

  
The HTTP Begin Hook is triggered when the TCP/IP connection begins an HTTP Session.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RECV_REQ_HEADER
NAME: Hook::RECV_REQ_HEADER Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Receive Request Header Hook.

  
The HTTP Receive Request Header Hook is triggered when the web server receives a request header.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: URI_MAP
NAME: Hook::URI_MAP Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP URI Map Hook.

 
The HTTP URI Map Hook is triggered when the web server maps a URI request to a context.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: HTTP_AUTH
NAME: Hook::HTTP_AUTH Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Authentication Hook.

 
The HTTP Authentication Hook is triggered after resource mapping and before handler processing.
 It occurs after HTTP built-in authentication, and can be used to perform additional authentication checking.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RECV_REQ_BODY
NAME: Hook::RECV_REQ_BODY Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Receive Request Body Hook.  


The HTTP Receive Request Body Hook is triggered when the web server receives request body data.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RCVD_REQ_BODY
NAME: Hook::RCVD_REQ_BODY Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Received Request Body Hook.  


The HTTP Received Request Body Hook is triggered when the web server finishes receiving request body data.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RECV_RESP_HEADER
NAME: Hook::RECV_RESP_HEADER Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Receive Response Header Hook.  


The HTTP Receive Response Header Hook is triggered when the web server creates the response header.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RECV_RESP_BODY
NAME: Hook::RECV_RESP_BODY Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Receive Response Body Hook.  


The HTTP Receive Response Body Hook is triggered when the web server backend receives the response body.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: RCVD_RESP_BODY
NAME: Hook::RCVD_RESP_BODY Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Received Response Body Hook.  


The HTTP Received Response Body Hook is triggered when the web server backend finishes receiving the response body.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: HANDLER_RESTART
NAME: Hook::HANDLER_RESTART Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Handler Restart Hook.

  
The HTTP Handler Restart Hook is triggered when the web server needs to discard the current response and start processing from beginning, for example, when an internal redirect has been requested.


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: SEND_RESP_HEADER
NAME: Hook::SEND_RESP_HEADER Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Send Response Header Hook. 


The HTTP Send Response Header Hook is triggered when the web server is ready to send the response header.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: SEND_RESP_BODY
NAME: Hook::SEND_RESP_BODY Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Send Response Body Hook. 


The HTTP Send Response Body Hook is triggered when the web server is going to send the response body.  


It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module.
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。

END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: HTTP_END
NAME: Hook::HTTP_END Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the HTTP Session End Hook. 


The HTTP Session End Hook is triggered when the HTTP connection has ended.  
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: MAIN_INITED
NAME: Hook::MAIN_INITED Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Main Initialized Hook. 


The Main Initialized Hook is triggered once upon startup, after the server configuration and
 initialization is completed by the main (controller) process, and before any requests are serviced.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: MAIN_PREFORK
NAME: Hook::MAIN_PREFORK Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Main Prefork Hook. 


The Main Prefork Hook is triggered by the main (controller) process immediately before
 a new worker process is started (forked). This is called for each worker, and may happen during
 system startup, or if a worker has been restarted.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: MAIN_POSTFORK
NAME: Hook::MAIN_POSTFORK Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Main Postfork Hook. 


The Main Postfork Hook is triggered by the main (controller) process immediately after
 a new worker process has been started (forked). This is called for each worker, and may happen during
 system startup, or if a worker has been restarted.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]



[ITEM]
ID: WORKER_POSTFORK
NAME: Hook::WORKER_POSTFORK Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Worker Postfork Hook. 


The Worker Postfork Hook is triggered by a worker process after being created by the main (controller) process.
 Note that a corresponding Main Postfork Hook may be called by the main process either before or after this callback.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]
	


[ITEM]
ID: WORKER_ATEXIT
NAME: Hook::WORKER_ATEXIT Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Worker At Exit Hook. 


The Worker At Exit Hook is triggered by a worker process just prior to exiting. It is the last hook point to be called by a worker.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]


 
[ITEM]
ID: MAIN_ATEXIT
NAME: Hook::MAIN_ATEXIT Priority
REQUIRED: 
APPLY: 
SINCE: 
SEE_ALSO: 

DESCR: Sets the priority for this module callback within the Main At Exit Hook. 


The Main At Exit Hook is triggered by the main (controller) process just prior to exiting. It is the last hook point to be called by the main process.
  

It will only take effect if the module has a hook point here. If it is not set, the priority will be the default value defined in the module. 
END_DESCR

SYNTAX: 整数値は-6000から6000です。値が小さいほど優先度が高くなります。
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: 
END_TIPS
[END_ITEM]

			
				
############# Tables #############


[TBL]
ID: servModules
NAME: Server Modules

DESCR: The Server module configuration globally defines the module configuration data. 
Once defined, the Listeners and Virtual Hosts have access to the modules and module configurations. 


All modules that are to be processed must be registered in the Server configuration. The Server configuration also 
defines the default values for module parameter data.  These values can be inherited 
or overridden by the Listener and Virtual Host configuration data.


Module priority is only defined at server level and is inherited by the Listener and Virtual Host configurations.
END_DESCR

CONT: modulename internalmodule modParams moduleEnabled	L4_BEGINSESSION L4_ENDSESSION L4_RECVING L4_SENDING 
 HTTP_BEGIN RECV_REQ_HEADER URI_MAP HTTP_AUTH RECV_REQ_BODY RCVD_REQ_BODY RECV_RESP_HEADER RECV_RESP_BODY RCVD_RESP_BODY
 HANDLER_RESTART SEND_RESP_HEADER SEND_RESP_BODY HTTP_END 
 MAIN_INITED MAIN_PREFORK MAIN_POSTFORK WORKER_POSTFORK WORKER_ATEXIT MAIN_ATEXIT
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: listenerModules
NAME: Listener Modules

DESCR: Listener module configuration data is, by default inherited from the Server module configuration.  
The Listener Modules are limited to the TCP/IP Layer 4 hooks.
END_DESCR

CONT: modulename modParams moduleEnabled_lst 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhModules
NAME: 仮想ホストモジュール

DESCR: 仮想ホストモジュール構成データは、デフォルトでサーバーモジュール設定から継承されます。
仮想ホストモジュールはHTTPレベルのフックに制限されています。
END_DESCR

CONT: modulename modParams moduleEnabled_vh 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhModuleUrlFilters
NAME: 仮想ホストモジュールのコンテキスト

DESCR: 仮想ホストコンテキストのモジュール設定をカスタマイズするための集中管理された場所です。
コンテキストURIの設定は、仮想ホストまたはサーバーレベルの設定を上書きします。
END_DESCR

CONT: expuri modParams moduleEnabled_vh 
END_CONT

SEE_ALSO: 
[END_TBL]



################ Pages ################


[PAGE]
ID: Module_Help 
NAME: モジュール設定

DESCR: モジュールのサポートは、Openlitespeed 1.3およびLSWS Enterprise 5.0以降で利用できます。
必要なモジュールはすべて、サーバーモジュール設定タブに登録する必要があります。
モジュールファイルは、登録可能なサーバーのroot / modulesフォルダーに置く必要があります。
起動時に、サーバーは登録されているすべてのモジュールをロードします。
新しいモジュールが登録された後、サーバーを再起動する必要があります。


モジュールは、サーバーモジュール設定タブでグローバルに設定できます。
構成データは、リスナーおよび仮想ホスト・モジュール構成が継承または変更するために使用できます。
END_DESCR

CONT: servModules listenerModules vhModules vhModuleUrlFilters moduleContext
END_CONT

SEE_ALSO: 
[END_PAGE]


[END_HELPDOC]
