<h1>Security</h1>

<p>LiteSpeed Web Server is designed with security as a top consideration. 
LSWS supports SSL, has access control at server and virtual host levels, 
and context-specific realm protection. Besides these standard features, 
LSWS also has the following special security features: </p>

<ol>
	<li><h3>Connection level limits:</h3>
	  <ul>
	    <li> IP-level throttling limits network bandwidth to and from a single IP 
	      address regardless of the number of connections. </li>
	    <li> IP-level connection accounting limits the number of concurrent connections 
	      from a single IP address. You can controll this with the connection 
	      soft limit, connection hard limit, grace 
	      period, and banned period settings in the WebAdmin console. </li>
	  </ul>
	</li>
	<li><h3>Request checking:</h3>
	  	<p> Every HTTP request is vetted by LiteSpeed Web Server. "/." is not allowed in
	    a decoded URL, thus denying accessing hidden files and parent directories.</p>
	    <p>Request size is limited by LiteSpeed Web Server's max request URL length, 
	    max request header length, and max request body length settings. </p>
    </li>
    
    <li><h3>Web Application Firewall:</h3>
  		<p>Request Filtering can be performed on the request header/body to check against possible attack signatures. 
  		This helps defend against XSS attacks and SQL injection attacks, blocking 
     those requests right from the start. </p>
  	</li>
    
	<li><h3>Static file checking:</h3>
  		<p>LiteSpeed Web Server will serve a static file only if the following conditions 
    are satisfied: </p>
	  <ul>
	    <li>The file is readable by everyone.</li>
	    <li>The file is not executable.</li>
	    <li>The file is not in the access denied directory list.</li>
	    <li>The file does not contain symbolic link if symbolic links are not allowed. </li>
	    <li>By default, LiteSpeed Web Server does not index a directory by listing its
	        files, it has to be enabled explicitly.</li>
	  </ul>
	</li>
	<li><h3>External application firewall:</h3>
		<p>LiteSpeed Web Server forwards requests to external applications to process/generate 
dynamic content. Those applications can use a lot of system resources. The performance of the 
whole system will be severely degraded when system resource consumption reaches a certain point 
-- when swapping space has to be used, for example. One way to conduct a DoS attack is to flood 
the web server with concurrent requests to a cumbersome external application.</p>

<p>LiteSpeed Web Server can pipeline requests and control the concurrent level of external 
application use to prevent overconsumption of system resources. LSWS caches requests and only 
forwards completed requests to the external application. This means the external application 
will not be held waiting while the server is receiving the request. LSWS also caches the 
external application's response so that the external application can be released as soon as 
the response is completed and does not have to wait for the client to receive the complete response. 
This way the server can utilize fewer external application instances to serve more concurrent 
requests and achieve higher performance and scalability. LiteSpeed Web Server also uses its 
own virtual memory to cache the request and response body to minimize the usage of system 
memory without sacrificing performance. </p></li>
  <li><h3>CGI resources consumption limit:</h3>
<p>LiteSpeed Web Server restricts the amount of system resources that can be consumed by
 CGI applications. For each request to a CGI script, the web server needs to
 start a standalone CGI process to handle it. On a Unix system, the number of concurrent 
 processes is limited. With the CGI resources consumption limit, you can configure 
 the maximum number of concurrent CGI instances that the web server can launch.  
Excessive concurrent processes will degrade the performance 
of the whole system. (CGI processes are a common weapon for DoS attacks.)
A system process limit can be specified per user in order to control the number
of processes that can be spawned by a CGI application. Each process is further confined by CPU and memory limits.</p>
</li>
  <li><h3>Enhanced CGI/FastCGI security with suEXEC:</h3>
<p>In order to reduce the security risks of a CGI or Fast CGI script, LiteSpeed Web Server can restrict the system resources the CGI script can access by running it in 
"suEXEC" or "chroot jail" mode. "suEXEC" starts the CGI or Fast CGI script with a different user ID from that of the web server. This greatly improves security in
shared hosting environment by preventing one user's CGI script from accessing other users' files.</p>
<p>"chroot jail" starts the CGI script under an assigned alternative
     root directory. The script can not access files beyond this new root directory. 
     With this, you no longer need to worry about confidential system files being 
     exposed by vulnerable scripts.</p>
</li>

<li><h3>Run LSWS in chroot jail [Enterprise Edition Only]:</h3>
  <p> LiteSpeed Web Server can run in a chroot environment (known as a chroot jail). 
    In the chroot environment, the web server and its child processes cannot access 
    files outside of the chroot jail. This protects the system from attacks 
    by malicious code. </p>
</li>
</ol>
