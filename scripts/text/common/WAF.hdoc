[HELPDOC]


########## WAF ##########


[ITEM]
ID: enableCensorship
NAME: Enable WAF
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to enable request content deep inspection. This
feature is equivalent to Apache's mod_security, which can be used to detect
and block requests with ill intention by matching them to known signatures. 
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: censorLogLevel
NAME: Log Level
NS: LE
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: Server {ITEM=ServGeneral_Help#log_logLevel}, Virtual Host {ITEM=VHGeneral_Help#vhlog_logLevel}

DESCR: Specifies the level of detail of the Web Application Firewall engine's debug output.
This value ranges from {val}0{/} - {val}9{/}. {val}0{/} disables logging. {val}9{/} produces the
most detailed log. The the server and virtual host's error log
{ITEM=ServGeneral_Help#log_logLevel} must be set to at least {val}INFO{/} for this option to take effect.
This is useful when testing request filtering rules.
END_DESCR

SYNTAX: uint 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: defaultAction
NAME: Default Action
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: {ITEM=ruleSetAction}

DESCR: Specifies the default actions that should be taken when a censoring rule
is met. Default value is {val}deny,log,status:403{/}, which means to deny access with status code 403 and
log the incident in the error log.

END_DESCR

SYNTAX: String. This action string is compatible with the syntax of Apache
mod_security. Please refer to the mod_security manual for more detail. 

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: scanPOST
NAME: Scan Request Body
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to check the body of an HTTP POST request. 
Default is "No".

END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: useRe2
NAME: Use RE2 regex engine
NS: L
REQUIRED:
APPLY:
SINCE:
SEE_ALSO:

DESCR: Use RE2 when evaluating regular expressions instead of PCRE.


Default value: {val}No{/}
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: [I] While PCRE provides more features than RE2, RE2 allows for a defined maximum memory usage and has a
more predictable runtime than PCRE making it more suited for use in server applications.

[P] Unlike PCRE, RE2 uses a fixed stack and guarantees that run-time increases linearly (not exponentially) with the
size of the input.
END_TIPS

[END_ITEM]



[ITEM]
ID: useRe2
NAME: Use RE2 regex engine
NS: E
REQUIRED:
APPLY:
SINCE:
SEE_ALSO:

DESCR: Use RE2 when evaluating regular expressions instead of PCRE.


Default value: {val}No{/}
END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS: [I] While PCRE provides more features than RE2, RE2 allows for a defined maximum memory usage and has a
more predictable runtime than PCRE making it more suited for use in server applications.

[P] Unlike PCRE, RE2 uses a fixed stack and guarantees that run-time increases linearly (not exponentially) with the
size of the input.
END_TIPS

[END_ITEM]



[ITEM]
ID: disableSecHtaccess
NAME: Disable .htaccess Override
NS: E
REQUIRED: 
APPLY: 2
SINCE: 4.0.17
SEE_ALSO: 

DESCR: Disable turning off mod_security engine in .htaccess. This is a global setting only available at the server level. 
Default is "No".

END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: uploadTmpDir
NAME: Temporary File Path
NS: LE
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: Temporary directory where files being uploaded to server will be stored
while request body parser is working. Default value is {val}/tmp{/}.

END_DESCR

SYNTAX: Absolute path or path starting with $SERVER_ROOT (for Server and VHost levels).
END_SYNTAX

EXAMPLE:
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



[ITEM]
ID: uploadTmpDir
NAME: Temporary File Path
NS: O
REQUIRED:
APPLY: 2
SINCE:
SEE_ALSO:

DESCR: Temporary directory where files being uploaded to server will be stored 
while request body parser is working. Default value is {val}/tmp/lshttpd/{/}.

END_DESCR

SYNTAX: Absolute path or path starting with $SERVER_ROOT (for Server and VHost levels) or $VH_ROOT (for VHost levels).
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: uploadTmpFilePermission
NAME: Temporary File Permissions
NS: LE
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: 

DESCR: Global setting determining file permissions used for files stored in the <b>Temporary File Path</b> directory.

END_DESCR

SYNTAX: 3 digits octet number. Default value is 666.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: uploadTmpFilePermission
NAME: Temporary File Permissions
NS: O
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: 

DESCR: Determines file permissions used for files stored in temporary directory. 
Server level setting is global, can be overridden at VHost level.

END_DESCR

SYNTAX: 3 digits octet number. Default value is 666.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: secAuditLogEngine
NAME: Enable Security Audit Log
NS: LE
REQUIRED: 
APPLY: 2
SINCE: 4.1.9
SEE_ALSO: {ITEM=secAuditLog}

DESCR: Specifies whether to enable audit logging and in what format
(Native, JSON, or Pretty JSON). This feature is equivalent to Apache's
mod_security audit engine.


If this setting is enabled and the {ITEM=secAuditLog} setting is set, detailed
request information will be saved.
END_DESCR

SYNTAX: select
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: secAuditLog
NAME: Security Audit Log
NS: LE
REQUIRED: 
APPLY: 3
SINCE: 4.1.9
SEE_ALSO: {ITEM=secAuditLogEngine}

DESCR: Specifies the path of the security audit log, which gives more detailed information. 
 This extra information can be useful if, for example, you wish to track the actions of 
 a particular user. Use {ITEM=secAuditLogEngine} to turn on the logging.   
END_DESCR

SYNTAX: file2
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



########## WAF Rule Set ##########


[ITEM]
ID: censorRuleSetName
NAME: Name
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Give a group of censorship rules a name. For display only.

END_DESCR

SYNTAX: String
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: ruleSetAction
NAME: Rule Set Action
NS: LE
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the actions that should be taken when a censoring rule
in current ruleset is met. If not set, {ITEM=defaultAction} will be
used. 
END_DESCR

SYNTAX: String. This action string uses the same syntax as Apache's
{ext-href}
  https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual#SecDefaultAction
{ext-href-end}
  mod_security SecDefaultAction directive
{ext-href-end-a}
.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: censorRuleSetEnabled
NAME: Enabled 
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to enable this rule set. With this option, a rule set can be
quickly turned on and off without adding or removing the rule set. Default is "Yes".

END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: censorRuleSet
NAME: Rules Definition
NS: L
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 


DESCR: Specifies a list of censorship rules.
END_DESCR

SYNTAX: String. Syntax of censoring rules follows that of Apache's mod_security
directives. "SecFilter", "SecFilterSelective", and "SecRule" can be 
used here.  You can copy and paste security rules from an Apache configuration file.


For more details about rule syntax, please refer to the 
{ext-href}http://www.modsecurity.org/documentation/index.html{ext-href-end}Mod Security documentation{ext-href-end-a}.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: Rules configured here only work for vhosts configured in native LSWS
configuration, not for vhosts from Apache httpd.conf.
END_TIPS

[END_ITEM]



[ITEM]
ID: censorRuleSet
NAME: Rules Definition
NS: E
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 


DESCR: Specifies a list of censorship rules.


If you are using an Apache config file, you have to set up rules in httpd.conf. 
Rules defined here will have no effect.
END_DESCR

EDITTIP: If you are using apache config file, you have to set up rules in httpd.conf and rules defined here have no effect.
END_EDITTIP

SYNTAX: String. Syntax of censoring rules follows that of Apache's mod_security
directives. "SecFilter", "SecFilterSelective", and "SecRule" can be 
used here.  You can copy and paste security rules from an Apache configuration file.


For more details about rule syntax, please refer to the 
{ext-href}http://www.modsecurity.org/documentation/index.html{ext-href-end}Mod Security documentation{ext-href-end-a}.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: Rules configured here only work for vhosts configured in native LSWS
configuration, not for vhosts from Apache httpd.conf.
END_TIPS

[END_ITEM]



############# Tables #############


[TBL]
ID: reqCensorship
NAME: Web Application Firewall (WAF)
NS: L

DESCR: 
END_DESCR

CONT: enableCensorship censorLogLevel defaultAction scanPOST uploadTmpDir uploadTmpFilePermission
secAuditLogEngine secAuditLog useRe2
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: reqCensorship
NAME: Web Application Firewall (WAF)
NS: E

DESCR: 
END_DESCR

CONT: enableCensorship censorLogLevel defaultAction scanPOST uploadTmpDir uploadTmpFilePermission disableSecHtaccess
secAuditLogEngine secAuditLog useRe2
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: VHreqCensorship
NAME: Web Application Firewall (WAF)
NS: LE

DESCR: 
END_DESCR

CONT: enableCensorship censorLogLevel defaultAction scanPOST
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: reqCensorshipRule
NAME: Web Application Firewall (WAF) Rule Set
NS: LE

DESCR: Rules configured here only work for virtual hosts configured with a native LSWS
configuration, not for virtual hosts using Apache httpd.conf.
END_DESCR

CONT: censorRuleSetName ruleSetAction censorRuleSetEnabled censorRuleSet
END_CONT

SEE_ALSO: 
[END_TBL]


[END_HELPDOC]