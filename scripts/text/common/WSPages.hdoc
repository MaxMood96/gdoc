[HELPDOC]






[ITEM]
ID: serverPriority
NAME: Priority
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: External App {ITEM=ExtApp_Help#extAppPriority}, {ITEM=ServSecurity_Help#CGIPriority}

DESCR: Specifies priority of the server processes. Value ranges from
{val}-20{/} to {val}20{/}. A lower number means higher priority.
END_DESCR

SYNTAX: Integer number
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [Performance] Usually a higher priority leads to slightly higher
web performance on a busy server. Do not set priority higher than that of database processes.
END_TIPS

[END_ITEM]



[ITEM]
ID: accessLog_pipedLogger
NAME: Piped Logger 
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the external application that will receive the access log
data sent by LiteSpeed through a pipe on its STDIN stream (file handle is 0). 
When this field is specified, the access log will be sent only to the logger 
application and not the access log file specified in previous entry.


The logger application must be defined in {PAGE=ExtApp_Help} section first. 
Server-level access logging can only use an external logger application 
defined at the server level. Virtual host-level access logging can only use
a logger application defined at the virtual host level.


The logger process is spawned in the same way as other external 
(CGI/FastCGI/LSAPI) processes. This means it will execute as the 
user ID specified in the virtual host's {ITEM=VirtualHosts_Help#setUidMode} 
settings and will never run on behalf of a privileged user. 


LiteSpeed web server performs simple load balancing among multiple logger 
applications if more than one instance of a logger application is configured. 
LiteSpeed server always attempts to keep the number of logger applications 
as low as possible. Only when one logger application fails to process access 
log entries in time will the server attempt to spawn another instance of 
the logger application. 


If a logger crashes, the web server will start another instance but the 
log data in the stream buffer will be lost. It is possible to lose log 
data if external loggers cannot keep up with the speed and volume of the log stream.
END_DESCR

SYNTAX: select 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: spdyAdHeader
NAME: SPDY Advertisement
REQUIRED: 
APPLY: 3
SINCE: 1.2.5
SEE_ALSO: 

DESCR: Specifies whether to advertise to clients that SPDY protocol is available. If set, LSWS will send an Alternate-Protocol 
response header when a client accesses SPDY-enabled websites through an HTTP connection. 
This requires the website to have both HTTP and HTTPS connections set up, and SPDY support enabled. 
END_DESCR

SYNTAX: port:protocol string 
END_SYNTAX

EXAMPLE: If SPDY/3 is enabled on port 443, you can set the string to "443:npn-spdy/3"  
END_EXAMPLE

TIPS:
END_TIPS

[END_ITEM]



########## TBL SECION #############


[TBL]
ID: expire
NAME: Expire Settings

DESCR: 
END_DESCR

CONT: enableExpires expiresDefault expiresByType 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: fileAccessControl
NAME: File Access Control

DESCR: 
END_DESCR

CONT: followSymbolLink checkSymbolLink forceStrictOwnership requiredPermissionMask
restrictedPermissionMask restrictedScriptPermissionMask
restrictedDirPermissionMask 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: perClientConnLimit
NAME: Per Client Throttling

DESCR: These are connection control settings based on client IP. 
These settings help to mitigate DoS (Denial of Service) and DDoS (Distributed Denial of Service) attacks.
END_DESCR

CONT: staticReqPerSec dynReqPerSec outBandwidth inBandwidth softLimit hardLimit blockBadReq gracePeriod banPeriod 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: cgiResource
NAME: CGI Settings

DESCR: The following settings control CGI processes. Memory and process limits also serve as the default for 
other external applications if limits have not been set explicitly for those applications. 
END_DESCR

CONT: cgidSock maxCGIInstances minUID minGID forceGID umask CGIPriority CPUSoftLimit CPUHardLimit memSoftLimit memHardLimit procSoftLimit procHardLimit 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: accessDeny
NAME: Access Denied Directories

DESCR: 
END_DESCR

CONT: accessDenyDir 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: gzipTuning
NAME: GZIP Compression Tuning

DESCR: 
END_DESCR

CONT: enableGzipCompress enableDynGzipCompress gzipCompressLevel 
compressibleTypes gzipAutoUpdateStatic gzipCacheDir gzipStaticCompressLevel 
gzipMaxFileSize gzipMinFileSize
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: scriptHandler
NAME: Script Handler Settings

DESCR: 
END_DESCR

CONT: suffix shType shHandlerName 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhGeneral
NAME: General

DESCR: 
END_DESCR

CONT: docRoot vhadminEmails enableGzip enableIpGeo spdyAdHeader 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhIndex
NAME: Index Files

DESCR: 
END_DESCR

CONT: indexUseServer indexFiles autoIndex autoIndexURI
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhExpire
NAME: Expire Settings

DESCR: 
END_DESCR

CONT: enableExpires expiresDefault  expiresByType
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: vhTop
NAME: Virtual Host

DESCR: 
END_DESCR

CONT: vhName vhRoot configFile allowSymbolLink enableScript
restrained vhMaxKeepAliveReq vhSmartKeepAlive setUidMode
chrootMode chrootPath staticReqPerSec dynReqPerSec
outBandwidth inBandwidth 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: tpSecFile
NAME: File Access Control

DESCR: 
END_DESCR

CONT: allowSymbolLink enableScript restrained
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: sslFeature
NAME: Security & Features

DESCR: 
END_DESCR

CONT: renegProtection enableSpdy
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: tpSecThrottle
NAME: Per Client Throttling Control

DESCR: 
END_DESCR

CONT: staticReqPerSec dynReqPerSec outBandwidth inBandwidth 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: tpSecCGI
NAME: External Application Resource Control

DESCR: 
END_DESCR

CONT: setUidMode chrootMode chrootPath
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: errPage
NAME: Customized Error Pages

DESCR: Whenever the server has a problem processing a request, 
the server will return an error code and an html page as the error message 
to the web client. Error codes are defined in the HTTP protocol (see RFC 2616). 
LiteSpeed web server has a built-in default error page for each error code, but 
a customized page can be configured for each error code.  
error pages can also be further customized to be unique for each virtual host. 
END_DESCR

CONT: errCode errURL
END_CONT

SEE_ALSO: 
[END_TBL]



########## PAGE SECION #############


[PAGE]
ID: ServTuning_Help 
NAME: Server Tuning

DESCR: 
END_DESCR

CONT: osTuning connTuning reqTuning staticTuning gzipTuning 
END_CONT

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: ServSecurity_Help 
NAME: Server Security

DESCR: 
END_DESCR

CONT: fileAccessControl perClientConnLimit cgiResource
accessDeny accessControl  
END_CONT

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: ScriptHandler_Help 
NAME: Script Handler


DESCR: LiteSpeed Web Server supports all scripting languages including 
Perl, PHP, Ruby, Python, Java, etc. Scripts written in these different 
languages must be brought to the appropriate external application to be processed. 
LiteSpeed Web Server uses script handlers to decide which external application a 
script should go to. These script handlers map files to external applications by 
using the file suffix. (Actually, the suffix is used to determine a MIME 
type which is then mapped to the external application.) External applications 
must be set up in the {PAGE= ExtApp_Help} tab before they can be selected for 
use in a script handler.


You can set up script handler at the server or virtual host level. Server-level
script handlers apply to all virtual hosts unless overridden in virtual host level. 
Virtual host-level script handlers only apply within that virtual host.
END_DESCR


CONT:  scriptHandler
END_CONT

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: VirtualHosts_Help 
NAME: Virtual Host List

DESCR: This page lists all defined virtual hosts. From here you can add/delete a virtual host or make
changes to an existing one. Before you add a virtual host, make sure the virtual host root directory exists.
END_DESCR

CONT: vhTop 
END_CONT

SEE_ALSO: 
[END_PAGE]



[TBL]
ID: listenerGeneral
NAME: General

DESCR: 
END_DESCR

CONT: listenerName listenerIP listenerPort listenerBinding listenerSecure 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: templateGeneral
NAME: General

DESCR: 
END_DESCR

CONT: templateName templateFile mappedListeners  
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: templateMembers
NAME: Member Virtual Hosts

DESCR: 
END_DESCR

CONT: templateVHName templateVHDomain templateVHAliases memberVHRoot  
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: templateSettings
NAME: Template Settings

DESCR: 
END_DESCR

CONT: templateVHRoot templateVHConfigFile templateVHDocRoot templateFileRef 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: Admin_listenerGeneral
NAME: General

DESCR: 
END_DESCR

CONT: listenerName listenerIP listenerPort listenerSecure
END_CONT

SEE_ALSO: 
[END_TBL]



[PAGE]
ID: Templates_Help 
NAME: Virtual Host Templates


DESCR: Virtual host templates make it easy to create many new virtual
hosts with similar configurations. 


Each template contains a template configuration file, a list of mapped listeners,
and a list of member virtual hosts.


To add a template-based virtual host, the administrator only needs to
add a member with a unique virtual host name and a
qualified domain name to the template member list.
Lister-to-virtual host mapping will be added automatically for 
all listeners in the template's mapped listener list. 


Later on, if you need to customize the configuration for a particular
virtual host, just "instantiate" that member virtual host and a
standalone virtual host configuration will be created automatically.
Even when setting up a customized virtual host,
a template can still be a convenient starting point.
END_DESCR

CONT: templateGeneral templateMembers templateSettings
END_CONT

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: Listeners_Help 
NAME: Listeners

DESCR: 
END_DESCR

CONT: listenerGeneral virtualHostMapping sslCert sslProtocolSetting sslFeature sslOCSP sslClientVerify
END_CONT

SEE_ALSO: 
[END_PAGE]



[PAGE]
ID: AdminListener_Help 
NAME: Admin Listeners

DESCR: Admin Listeners are dedicated to the Admin Server. Secure (SSL) listeners 
are recommended for the Admin Server.
END_DESCR

CONT: Admin_listenerGeneral sslCert sslProtocolSetting sslFeature sslClientVerify
END_CONT

SEE_ALSO: 
[END_PAGE]



################# TBL ########################################
############# memSoftLimit memHardLimit procSoftLimit procHardLimit is shared items #############


[TBL]
ID: extapp
NAME: External Application Settings

DESCR: 
END_DESCR

CONT: extAppType extAppName extAppAddress expWSAddress maxConns env initTimeout 
retryTimeout persistConn pcKeepAliveTimeout respBuffer autoStart
extMaxIdleTime extAppPath backlog instances extUser extGroup extUmask
runOnStartUp extAppPriority 
memSoftLimit memHardLimit procSoftLimit procHardLimit
END_CONT

SEE_ALSO: 
[END_TBL]



#################### PAGE ##############


[PAGE]
ID: ExtApp_Help 
NAME: External Application

DESCR: LiteSpeed web server can forward requests to external applications to 
process and generate dynamic content. 
 
Since 2.0, LiteSpeed Web Server has supported seven types of external
applications: CGI, FastCGI, web server, servlet engine, LiteSpeed SAPI
application, load balancer, and piped logger.

<ul>
<li>CGI stands for Common Gateway Interface. The current standard is CGI/1.1. 
   CGI applications run in standalone processes. A CGI process is started 
   for each request and will exit after finishing the request. 
</li>
<li>FastCGI is a fast, open, and secure web server interface that solves the 
  performance problems inherent in CGI without introducing the overhead and 
  complexity of proprietary APIs (Application Programming
  Interfaces).  For more information, please visit {ext-href}http://www.fastcgi.com{ext-href-end}http://www.fastcgi.com{ext-href-end-a}.

  On LiteSpeed Web Server, FastCGI applications can take two roles: 
  generating dynamic responses (a responder role) or authorizing requests 
  (an authorizer role). LiteSpeed Web Server further defines two types of 
  FastCGI applications: local FastCGI and remote FastCGI. 
  Local FastCGI applications are started automatically by the web server
  on demand. Remote FastCGI applications are not started by the web server. 
  (They can run on a remote machine or on the same machine.)
</li>
<li>a web server is a server application that supports HTTP 1.0/1.1
protocols. LiteSpeed web server can serve as a transparent reverse proxy
to accelerate and protect web servers and application servers. 
When communicating with backend web servers, LiteSpeed will
always try to utilize persistent connections in order to achieve the 
highest performance.</li>
<li>A servlet engine is an application, like Apache Tomcat and Jetty, 
that implements Java servlets and Java Server Pages. LiteSpeed can communicate
with servlet engines through AJPv1.3 (Apache JServ Protocol version 1.3).
Servlet engine cannot be started by the web server and can be setup to run on a
remote machine. </li>
<li>A LiteSpeed SAPI (LiteSpeed Server Application Programming Interface) 
application is an application that communicates with LiteSpeed Web Server through 
LSAPI, a fast, scalable server interface specifically designed for LiteSpeed Web 
Server to achieve maximum efficiency.

LSAPI's mechanism of action are similar to FastCGI, but LSAPI applications can be
up to 30% faster than comparable FastCGI applications. LSAPI is highly 
recommended over FastCGI for supported applications. 
(LSAPI currently supports applications written in PHP, Ruby, and Python.)

For more information about LSAPI, please visit
{ext-href}http://www.litespeedtech.com/products/litespeed-sapi/overview/{ext-href-end}http://www.litespeedtech.com/products/litespeed-sapi/overview/{ext-href-end-a}.
</li>
<li>A load balancer is a virtual external application, which assigns
requests to backend worker applications based on workload. Worker
applications can be CGI, FastCGI, web server, servlet engine, or LSAPI
applications. Different types of applications can
be mixed together under one load balancer. Load balancers and piped
loggers cannot be used as worker applications.</li>
<li>A piped logger is an application that can process access
logs in real-time, writing an access log into database or performing
real-time statistics calculations, for example.</li>
</ul>

Unlike CGI applications, FastCGI applications, LSAPI applications, and 
servlet engine do not exit after processing a request. The application process will stay/persist and serve 
as many requests as it can. The socket connection can be reused for multiple requests as well. 

External applications can be set up in the {PAGE=ExtApp_Help} section. 
External applications cannot, however, function on their own. Additional settings must 
be configured so that the web server knows which requests to send to which application. 
There are two ways to to configure this in LiteSpeed Web Server: 
<ol>
  <li> Set the external application as a handler for a specific context.</li> 
  <li> Set the external application as a handler of a script language via file suffix binding.</li>
</ol> 

FastCGI applications, LSAPI applications, web servers, servlet engines,
and load balancers have to be defined in the {PAGE=ExtApp_Help} 
section before you can configure them to handle a context or script suffix . 
It is not necessary to define CGI applications in the {PAGE=ExtApp_Help} section. 


External applications can be configured at the server level or at the virtual host level. 
When configured at the server level, the application can be used by all virtual hosts. When configured at the
virtual host level, it can only be used by that virtual host.

END_DESCR

CONT: extapp
END_CONT

SEE_ALSO: 
[END_PAGE]



[END_HELPDOC]
