[HELPDOC]

################## TBL #############################



[TBL]
ID: generalContext
NAME: Static Context

DESCR: Context settings are used to specify special settings for files in a 
certain location. These settings can be used to bring in files outside of 
the document root (like Apache's Alias or AliasMatch directives),  
or to protect a particular directory using authorization realms, or to 
block or restrict access to a particular directory within the document root.
END_DESCR

CONT: expuri location allowBrowse enableExpires expiresDefault expiresByType
extraHeaders addMIMEType forceType defaultType autoIndex indexFiles  
realm authName required accessAllowed accessDenied extAuthorizer
addDefaultCharset defaultCharsetCustomized 
enableRewrite rewriteInherit rewriteBase rewriteRules
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: javaWebAppContext
NAME: Java Web App Context

DESCR: Many people running Java applications use the servlet engine to serve static 
content as well. But no servlet engine is nearly as efficient as LiteSpeed Web Server 
for these processes. In order to improve the overall performance, 
LiteSpeed Web Server can be configured as a gateway server, which serves static content 
and forwards dynamic Java page requests to the servlet engine. 


LiteSpeed Web Server requires certain contexts to be defined in order to run a 
Java application. A Java Web App Context automatically creates all required 
contexts based on the Java web application's configuration file (WEB-INF/web.xml). 


There are a few points you need to keep in mind when setting up a Java Web App Context:

<ul>
<li>A {val}Servlet Engine{/} external application must be set up in {PAGE=ExtApp_Help} 
before Java Web App Context can be set up.</li> 
<li>A {PAGE=ScriptHandler_Help} for .jsp files should be defined as well.</li>
<li>If the web application is packed into a .war file, the .war file must be expanded. 
The server cannot access compressed archive files.</li>
<li>For the same resources, the same URL should be used no matter whether it is accessed 
through LiteSpeed Web Server or through the servlet engine's built-in HTTP server.

For example, 
  Tomcat 4.1 is installed under /opt/tomcat. Files for the "examples" web application are 
  located at /opt/tomcat/webapps/examples/. Through Tomcat's built-in HTTP server, 
  the "examples" web application is thus accessed with a URI like "/examples/***". 
  The corresponding Java Web App Context should thus be configured: 
  {ITEM=expuri} = {val}/examples/{/}, {ITEM=javaWebApp_location} = {val}/opt/tomcat/webapps/examples/{/}.</li>
  </ul>
END_DESCR


CONT: uri javaWebApp_location servletEngine enableExpires
expiresDefault expiresByType extraHeaders autoIndex indexFiles 
realm authName required accessAllowed accessDenied extAuthorizer
addDefaultCharset defaultCharsetCustomized 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]





[TBL]
ID: servletContext
NAME: Servlet Context

DESCR: Servlets can be imported individually through Servlet Contexts. 
A Servlet Context just specifies the URI for the servlet and the name of the servlet engine. 
You only need to use this when you do not want to import the whole web application 
or you want to protect different servlets with different authorization realms. 
This URI has the same requirements as for a {TBL=javaWebAppContext}. 
END_DESCR


CONT: expuri servletEngine extraHeaders realm authName required
accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]






[TBL]
ID: fcgiContext
NAME: FastCGI Context

DESCR: FastCGI applications cannot be used directly. A FastCGI application must be either configured as 
a script handler or mapped to a URL through FastCGI context. A FastCGI context will 
associate a URI with a FastCGI application. 
END_DESCR

CONT: expuri fcgiapp extraHeaders  
realm authName required accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]


[TBL]
ID: lsapiContext
NAME: LiteSpeed SAPI Context

DESCR: External applications cannot be used directly. They must be either configured as 
a script handler or mapped to a URL through a context. An LiteSpeed SAPI Context will 
associate a URI with an LSAPI (LiteSpeed Server Application Programming Interface) application.
Currently PHP, Ruby and Python have LSAPI modules. LSAPI, as it is developed specifically for
LiteSpeed web server, is the most efficient way to communicate with LiteSpeed web server.  
END_DESCR

CONT: expuri lsapiapp extraHeaders  
realm authName required accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]


[TBL]
ID: proxyContext
NAME: Proxy Context

DESCR: A Proxy Context enables this virtual host as a transparent reverse
proxy server. This proxy server can run in front of any web 
servers or application servers that support HTTP protocol. The External
web server that this virtual host proxies for  has to be defined in {PAGE=ExtApp_Help} 
before you can set up a Proxy Context.
END_DESCR

CONT: expuri proxyWebServer extraHeaders 
realm authName required accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableIpGeo
END_CONT

SEE_ALSO: 
[END_TBL]




[TBL]
ID: cgiContext
NAME: CGI Context

DESCR: A CGI context defines scripts in a particular directory as CGI scripts. 
This directory can be inside or outside of the document root. 
When a file under this directory is requested, the server will always 
try to execute it as a CGI script, no matter if it's executable or not. 
In this way, file content under a CGI Context is always protected and cannot 
be read as static content. It is recommended that you put all your CGI 
scripts in a directory and set up a CGI Context to access them. 
END_DESCR

CONT: expuri cgi_path extraHeaders allowSetUID  
realm authName required accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableRewrite rewriteInherit rewriteBase rewriteRules 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: railsContext
NAME: Rack/Rails Context

DESCR: A Rack/Rails Context provides an easy way to configure a Ruby Rack/Rails
application. To add a Rack/Rails application through a Rack/Rails Context, 
only mounting the URL and the application's root directory is required. There is 
no need to go through all the troubles to define an external application, add a 404 handler, 
and rewrite rules, etc.
END_DESCR

CONT: expuri location railsEnv maxConns env enableExpires 
expiresDefault expiresByType extraHeaders
indexFiles autoIndex  
realm authName required accessAllowed accessDenied extAuthorizer
addDefaultCharset defaultCharsetCustomized 
enableRewrite rewriteInherit rewriteBase rewriteRules 
enableIpGeo
END_CONT

SEE_ALSO: 
[END_TBL]




[TBL]
ID: lbContext
NAME: Load Balancer Context

DESCR: Like other external applications, load balancer worker applications 
cannot be used directly. They must be mapped to a URL through a context. 
A Load Balancer Context will associate a URI to be load balanced by the load balancer workers. 
END_DESCR


CONT: expuri lbapp realm authName required
accessAllowed accessDenied extAuthorizer 
addDefaultCharset defaultCharsetCustomized 
enableIpGeo 
END_CONT

SEE_ALSO: 
[END_TBL]




[TBL]
ID: redirectContext
NAME: Redirect Context

DESCR: A Redirect Context can be used to forward one URI or a group of URIs to another location. 
The destination URI can be either on the same web site (an internal
redirect) or an absolute URI pointing to another web site (an external redirect).
END_DESCR

CONT: expuri externalredirect statuscode destinationuri realm 
authName required accessAllowed accessDenied extAuthorizer
END_CONT

SEE_ALSO: 
[END_TBL]


################ PAGE ####################




[PAGE]
ID: Context_Help 
NAME: Context

DESCR: In LiteSpeed Web Server terminology, a "context" is a virtual location, a common parent URL, 
 that identifies a group of resources. Contexts can be thought of as different directories 
 in your website's directory tree. For example, "/" is the root context mapped to the 
document root of a website. "/cgi-bin/" is a context farther up on the tree, dedicated 
to the CGI applications for this site. A context can be explicitly defined in 
LiteSpeed's WebAdmin console for the following purposes:

<ul>
  <li>To make a file system outside of the document root accessible.</li>
  <li>To block access to certain resources.</li>
  <li>To setup user-level authentication for certain resources.</li>
  <li>To create mount points for external applications.</li>
  <li>To redirect requests to another location.</li>
</ul>
END_DESCR

CONT: generalContext javaWebAppContext servletContext fcgiContext lsapiContext proxyContext 
cgiContext redirectContext lbContext railsContext
END_CONT

SEE_ALSO: 
[END_PAGE]


[END_HELPDOC]
