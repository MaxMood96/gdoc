[HELPDOC]



[ITEM]
ID: suffix
NAME: Suffix
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR:  Specifies the script file suffixes that will be handled by this 
script handler. Suffixes must be unique. 

END_DESCR

SYNTAX: Comma delimited list with period "." character prohibited.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: The server will automatically add a special MIME type ("application/x-httpd-[suffix]") for the first 
suffix in the list. For example, MIME type "application/x-httpd-php53" will be added 
for suffix "php53". Suffixes after the first need to set up in the {ITEM=mime} settings.

Though we list suffixes in this field, the script handlers use MIME types, not suffixes, 
to decide which scripts to handle. 

[Performance & Security] Only specify the suffixes you really need.
END_TIPS

[END_ITEM]



[ITEM]
ID: httpdWorkers
NAME: Number of Workers
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the number of httpd workers. 

END_DESCR

SYNTAX: Integer value between 1 and 16.
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [Performance] Set an appropriate number to suit your needs. Adding more workers may not necessarily mean better performance.
END_TIPS

[END_ITEM]



[ITEM]
ID: listenerBinding
NAME: Binding
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies which lshttpd child process the listener is assigned to. 
Different child processes can be used to handle requests to
different listeners by manually associating a listener with a
process. By default, a listener is assigned to all child processes.
END_DESCR

SYNTAX: checkbox
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]




[ITEM]
ID: runningAs
NAME: Running As
REQUIRED: 
APPLY: 1
SINCE: 
SEE_ALSO: 

DESCR: Specifies the user/group that the server process runs as. This is set 
using the parameters "--with-user" and "--with-group" when running the configure 
command before installation. To reset these values, you must rerun the configure 
command and reinstall.
END_DESCR

SYNTAX: 
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [Security] Server should not run as a privileged user such as "root". 
It is critical that the server is configured to run with a un-privileged user/group combination 
that does not have login/shell access. A user/group of {val}nobody{/} is generally a good choice.
END_TIPS

[END_ITEM]




[ITEM]
ID: maxConnections
NAME: Max Connections
REQUIRED: 
APPLY: 3
SINCE: 
SEE_ALSO: 

DESCR: Specifies the maximum number of concurrent connections that the server can accept. 
This includes both plain TCP connections and SSL connections. Once the maximum concurrent connections limit is reached, 
the server will close Keep-Alive connections when they complete active requests. 
END_DESCR

SYNTAX: uint
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: When the server is started by "root" user, the server will try to
adjust the per-process file descriptor limits automatically, however,
if this fails, you may need to increase this limit manually.
END_TIPS

[END_ITEM]




[ITEM]
ID: disableInitLogRotation
NAME: Disable Initial Log Rotation 
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: 

DESCR: Specifies whether to disable rotation of server error log
file at startup. Initial log rotation is enabled by default for standard installations. 

END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: 
END_TIPS

[END_ITEM]



[ITEM]
ID: uploadPassByPath
NAME: Pass Upload Data by File Path
REQUIRED: 
APPLY: 2
SINCE: 
SEE_ALSO: 

DESCR: Specify whether or not to pass upload file data by path. If enabled, file path along with 
some other information is sent to backend handler instead of file itself when uploading. 
This saves on CPU resources and file transfer time but requires some updates to 
backend to implement. If disabled, file content will be transferred to backend handler, 
request body is still parsed to files.

END_DESCR

SYNTAX: bool
END_SYNTAX

EXAMPLE: 
END_EXAMPLE

TIPS: [performance] Enable this to speed up file upload processing if backward compatibility is not an issue.
END_TIPS

[END_ITEM]



[TBL]
ID: fileUpload
NAME: File Upload

DESCR: Provides additional security functionality when uploading files by using a Request Body 
Parser to parse files to a server local directory where they can be easily scanned for malicious 
intent by third party modules. Request Body Parser is used when {ITEM=uploadPassByPath} is 
enabled or a module calls LSIAPIâ€™s set_parse_req_body in the LSI_HKPT_HTTP_BEGIN level. 
API examples provided in source package.
END_DESCR

CONT: uploadTmpDir uploadTmpFilePermission uploadPassByPath
END_CONT

SEE_ALSO: {ITEM=HTTP_BEGIN}
[END_TBL]


################### TBL #################

[TBL]
ID: servProcess
NAME: Server Process

DESCR: 
END_DESCR

CONT: serverName httpdWorkers runningAs serverPriority 
 inMemBufSize swappingDir autoFix503 enableh2c gracefulRestartTimeout
END_CONT

SEE_ALSO: 
[END_TBL]




[TBL]
ID: servGeneral
NAME: General Settings

DESCR: 
END_DESCR

EDITTIP: MIME settings can be edited from previous page. You can specify the mime configuration file location which can be either be an absolute path or 
relative to $SERVER_ROOT.
END_EDITTIP

CONT: mime mimesuffix mimetype disableInitLogRotation showVersionNumber 
 enableIpGeo useIpInProxyHeader adminEmails 
END_CONT

SEE_ALSO: 
[END_TBL]



[TBL]
ID: osTuning
NAME: OS Optimization

DESCR: 
END_DESCR

CONT: eventDispatcher SSLCryptoDevice
END_CONT

SEE_ALSO: 
[END_TBL]


[TBL]
ID: connTuning
NAME: Connection Tuning

DESCR: 
END_DESCR

CONT: maxConnections maxSSLConnections connTimeout maxKeepAliveReq
smartKeepAlive keepAliveTimeout sndBufSize rcvBufSize
END_CONT

SEE_ALSO: 
[END_TBL]


[TBL]
ID: staticTuning
NAME: Static File Delivery Optimization

DESCR: 
END_DESCR

CONT: maxCachedFileSize totalInMemCacheSize maxMMapFileSize totalMMapCacheSize
useSendfile fileETag
END_CONT

SEE_ALSO: 
[END_TBL]



################ PAGE #################

[PAGE]
ID: ServGeneral_Help 
NAME: Server General

DESCR: General settings for the whole server. When path information is required in a setting, 
it can be either absolute or relative to $SERVER_ROOT. $SERVER_ROOT is the 
location where LiteSpeed web server has been installed (your_home_dir/lsws or 
/opt/lsws, for example). The server executable is under $SERVER_ROOT/bin. 
END_DESCR

CONT: servProcess servGeneral servIndex expire fileUpload geolocationDB servLog servAcLog 
END_CONT

SEE_ALSO: 
[END_PAGE]




[PAGE]
ID: VHGeneral_Help 
NAME: Virtual Host General

DESCR: 
END_DESCR

CONT: vhGeneral vhLog vhAcLog vhIndex errPage expire fileUpload scriptHandler 
vhExpire  
END_CONT

SEE_ALSO: 
[END_PAGE]





[END_HELPDOC]
